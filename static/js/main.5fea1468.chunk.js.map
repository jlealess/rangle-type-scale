{"version":3,"sources":["components/SampleForm.js","reducers/index.js","components/SampleFormContainer.js","components/SampleForm.actions.js","components/BodyForm.js","components/BodyFormContainer.js","components/BodyForm.actions.js","components/Sidebar.js","components/Sample.js","components/SampleList.js","components/Heading.js","components/Paragraph.js","components/BodyTypeTester.js","components/Main.js","App.js","serviceWorker.js","store/index.js","index.js"],"names":["SampleForm","props","react_default","a","createElement","index_es","id","label","type","value","baseSize","onChange","changeBaseSize","inputProps","min","fullWidth","margin","select","SelectProps","native","fontFamily","changeHeadlineFont","fontFamilies","map","family","key","sampleWeight","changeWeight","step","max","previewHeadline","changePreviewHeadline","typeScaleSelected","changeTypeScale","typeScaleValues","i","name","TYPESCALE_ACTIONS","INITIAL_STATE","backgroundColor","lineHeight","bodyWeight","bodyFontColor","bodyFont","previewParagraph","largeSamples","smallSamples","numberOfSamples","typeScale","SampleFormContainer","_this$props","this","typeScaleSize","components_SampleForm","Component","mapDispatchToProps","e","payload","target","connect","state","BodyForm","bodyFontFamily","changeBodyFont","changeBodyWeight","changeLineHeight","changeBackgroundColor","changeFontColor","changePreviewParagraph","multiline","BodyFormContainer","components_BodyForm","StyledSidebar","styled","div","_templateObject","Sidebar","components_SampleFormContainer","components_BodyFormContainer","SampleBody","Sample_templateObject","theme","lightGray","countDecimals","num","Math","floor","valueOf","toString","split","length","Sample","baseSizeValue","typeScaleValue","typeScaleEms","toFixed","typeScalePx","styles","display","fontSize","concat","fontWeight","className","style","StyledList","SampleList_templateObject","black","SampleList","addLargeSample","addSmallSample","samples","unshift","pow","push","IconButton_default","aria-label","onClick","icons_index_es","sort","reverse","sample","components_Sample","Heading","multiplier","fontSizeToPx","H","level","text","Paragraph","color","levels","Object","toConsumableArray","Array","keys","BodyTypeTester","components_Heading","components_Paragraph","Main","components_SampleList","components_BodyTypeTester","StyledApp","App_templateObject","App","styled_components_browser_esm","components_Sidebar","components_Main","Boolean","window","location","hostname","match","store","createStore","arguments","undefined","action","objectSpread","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5fea1468.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  TextField,\n} from \"@material-ui/core\";\n\nconst SampleForm = (props) => {\n  return (\n    <form>\n      <TextField \n        id=\"baseSize\" \n        label=\"Base Size (px)\"\n        type=\"number\"\n        value={props.baseSize}\n        onChange={props.changeBaseSize}\n        inputProps={\n          {\n            min: 1\n          }\n        }\n        fullWidth={true}\n        margin=\"normal\"\n      />\n      <TextField\n        label=\"Headline Font\"\n        fullWidth={true}\n        margin=\"normal\"\n        select\n        SelectProps={{\n          native: true,\n        }}        \n          id=\"fontFamily\"\n          value={props.fontFamily}\n          onChange={props.changeHeadlineFont}\n        >\n          {props.fontFamilies.map(family => (\n            <option\n              key={family}\n              value={family}>\n              {family}\n            </option>\n          ))}\n      </TextField>\n      <TextField \n        id=\"sampleWeight\" \n        label=\"Headline Weight\"\n        type=\"number\"\n        value={props.sampleWeight}\n        onChange={props.changeWeight}\n        inputProps={\n          {\n            step: 100,\n            min: 100,\n            max: 1000\n          }\n        }\n        fullWidth={true}\n        margin=\"normal\"\n      />\n      <TextField \n        id=\"previewHeadline\" \n        label=\"Headline Preview Text\"\n        value={props.previewHeadline}\n        onChange={props.changePreviewHeadline}\n        fullWidth={true}\n        margin=\"normal\"\n      />\n      <TextField \n        id=\"typeScale\" \n        label=\"Scale\"\n        fullWidth={true}\n        margin=\"normal\"\n        select\n        SelectProps={{\n          native: true,\n        }}        \n        value={props.typeScaleSelected}\n        onChange={props.changeTypeScale}\n      >\n        {props.typeScaleValues.map((value, i) => (\n          <option value={i} key={value.name}>\n            {value.value} – {value.name}\n          </option>\n        ))}\n      </TextField>\n      </form>\n  );\n};\n\nexport default SampleForm;","export const TYPESCALE_ACTIONS = {\n  ADD_LARGE_SAMPLE: 'ADD_LARGE_SAMPLE',\n  ADD_SMALL_SAMPLE: 'ADD_SMALL_SAMPLE',\n  CHANGE_BASE_SIZE: 'CHANGE_BASE_SIZE',\n  CHANGE_PREVIEW_HEADLINE: 'CHANGE_PREVIEW_HEADLINE',\n  CHANGE_HEADLINE_FONT: 'CHANGE_HEADLINE_FONT',\n  CHANGE_NUMBER_OF_SPECIMENS: 'CHANGE_NUMBER_OF_SPECIMENS',\n  CHANGE_SAMPLE_WEIGHT: 'CHANGE_SAMPLE_WEIGHT',\n  CHANGE_TYPESCALE: 'CHANGE_TYPESCALE',\n  CHANGE_BODY_WEIGHT: 'CHANGE_BODY_WEIGHT',\n  CHANGE_BODY_FONT: 'CHANGE_BODY_FONT',\n  CHANGE_LINE_HEIGHT: 'CHANGE_LINE_HEIGHT',\n  CHANGE_BACKGROUND_COLOR: 'CHANGE_BACKGROUND_COLOR',\n  CHANGE_FONT_COLOR: 'CHANGE_FONT_COLOR',\n  CHANGE_PREVIEW_PARAGRAPH: 'CHANGE_PREVIEW_PARAGRAPH'   \n};\n\nexport const INITIAL_STATE = {\n  /* body text */\n  backgroundColor: \"#ffffff\",\n  lineHeight: 1.5,\n  bodyWeight: 400,\n  bodyFontColor: \"#333333\",\n  bodyFont: \"Rangle Riforma\",\n  previewParagraph: \"What looked like a small patch of purple grass, above five feet square, was moving across the sand in their direction. When it came near enough he perceived that it was not grass; there were no blades, but only purple roots. The roots were revolving, for each small plant in the whole patch, like the spokes of a rimless wheel.\",\n  \n  /* type samples */\n  largeSamples: 4,\n  smallSamples: 4,\n  numberOfSamples: 5,\n  sampleWeight: 400,\n  \n  /* both */\n  baseSize: 16,\n  fontFamily: \"Rangle Riforma\",\n  fontFamilies: [\"Rangle Riforma\", \"Rangle Riforma Light\"],\n  previewHeadline: \"A Visual Type Scale\",\n  typeScale: {\n    value: 1.2,\n    name: \"Minor Third\"\n  },\n  typeScaleSelected: 2,\n  typeScaleValues: [\n    {\n      value: 1.067,\n      name: \"Minor Second\"\n    },\n    {\n      value: 1.125,\n      name: \"Major Second\"\n    },\n    {\n      value: 1.2,\n      name: \"Minor Third\"\n    },\n    {\n      value: 1.250,\n      name: \"Major Third\"\n    },\n    {\n      value: 1.333,\n      name: \"Perfect Fourth\"\n    },\n    {\n      value: 1.414,\n      name: \"Augmented Fourth\"\n    },\n    {\n      value: 1.500,\n      name: \"Perfect Fifth\"\n    },\n    {\n      value: 1.618,\n      name: \"Golden Ratio\"\n    }\n  ]\n};\n\nexport const reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case(TYPESCALE_ACTIONS.ADD_LARGE_SAMPLE): {\n      return {\n        ...state,\n        largeSamples: state.largeSamples += 1\n      }\n    }\n    case (TYPESCALE_ACTIONS.ADD_SMALL_SAMPLE): {\n      return {\n        ...state,\n        smallSamples: state.smallSamples += 1\n      }\n    }\n    case(TYPESCALE_ACTIONS.CHANGE_BASE_SIZE): {\n      return {\n        ...state,\n        baseSize: action.payload\n      }\n    }\n    case (TYPESCALE_ACTIONS.CHANGE_NUMBER_OF_SPECIMENS): {\n      return {\n        ...state,\n        numberOfSamples: action.payload\n      }\n    }\n    case(TYPESCALE_ACTIONS.CHANGE_PREVIEW_HEADLINE): {\n      return {\n        ...state,\n        previewHeadline: action.payload\n      }\n    }\n    case (TYPESCALE_ACTIONS.CHANGE_SAMPLE_WEIGHT): {\n      return {\n        ...state,\n        sampleWeight: action.payload\n      }\n    }\n    case (TYPESCALE_ACTIONS.CHANGE_TYPESCALE): {\n      return {\n        ...state,\n        typeScaleSelected: action.payload\n      }\n    }\n    case (TYPESCALE_ACTIONS.CHANGE_HEADLINE_FONT): {\n      return {\n        ...state,\n        fontFamily: action.payload\n      }\n    }\n    case (TYPESCALE_ACTIONS.CHANGE_BODY_WEIGHT): {\n      return {\n        ...state,\n        bodyWeight: action.payload\n      }\n    }\n    case (TYPESCALE_ACTIONS.CHANGE_BODY_FONT): {\n      return {\n        ...state,\n        bodyFont: action.payload\n      }\n    }\n    case (TYPESCALE_ACTIONS.CHANGE_FONT_COLOR): {\n      return {\n        ...state,\n        bodyFontColor: action.payload\n      }\n    }\n    case (TYPESCALE_ACTIONS.CHANGE_LINE_HEIGHT): {\n      return {\n        ...state,\n        lineHeight: action.payload\n      }\n    }\n    case (TYPESCALE_ACTIONS.CHANGE_BACKGROUND_COLOR): {\n      return {\n        ...state,\n        backgroundColor: action.payload\n      }\n    }\n    case (TYPESCALE_ACTIONS.CHANGE_PREVIEW_PARAGRAPH): {\n      return {\n        ...state,\n        previewParagraph: action.payload\n      }\n    }\n    default:\n      return state;\n  }\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SampleForm from './SampleForm';\nimport {\n  changeBaseSize, \n  changeHeadlineFont,\n  changeWeight,\n  changePreviewHeadline,\n  changeTypeScale\n} from './SampleForm.actions';\n\nclass SampleFormContainer extends Component {\n  render() {\n    const { \n      baseSize, \n      fontFamily,\n      fontFamilies,\n      previewHeadline, \n      typeScaleSelected,\n      typeScaleSize, \n      typeScaleValues, \n      sampleWeight, \n      changeBaseSize, \n      changeHeadlineFont,\n      changeWeight,\n      changePreviewHeadline, \n      changeTypeScale } = this.props;\n\n    return (\n      <div>\n        <SampleForm \n          baseSize={baseSize}\n          fontFamily={fontFamily}\n          fontFamilies={fontFamilies}\n          previewHeadline={previewHeadline}\n          typeScaleSize={typeScaleSize}\n          typeScaleValues={typeScaleValues}\n          typeScaleSelected={typeScaleSelected}\n          sampleWeight={sampleWeight}\n          changeBaseSize={changeBaseSize}\n          changeHeadlineFont={changeHeadlineFont}\n          changeWeight={changeWeight}\n          changePreviewHeadline={changePreviewHeadline}\n          changeTypeScale={changeTypeScale}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  baseSize: state.baseSize,\n  fontFamily: state.fontFamily,\n  fontFamilies: state.fontFamilies,\n  previewHeadline: state.previewHeadline,\n  typeScaleSize: state.typeScale.value,\n  typeScaleSelected: state.typeScaleSelected,\n  typeScaleValues: state.typeScaleValues,\n  sampleWeight: state.sampleWeight\n});\n\nconst mapDispatchToProps = {\n  changeBaseSize,\n  changeHeadlineFont,\n  changeWeight,\n  changePreviewHeadline,\n  changeTypeScale\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SampleFormContainer);","import { TYPESCALE_ACTIONS } from '../reducers';\n\nexport const changeBaseSize = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_BASE_SIZE,\n  payload: e.target.value\n});\n\nexport const changeWeight = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_SAMPLE_WEIGHT,\n  payload: e.target.value\n});\n\nexport const changePreviewHeadline = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_PREVIEW_HEADLINE,\n  payload: e.target.value\n});\n\nexport const changeTypeScale = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_TYPESCALE,\n  payload: e.target.value\n})\n\nexport const changeHeadlineFont = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_HEADLINE_FONT,\n  payload: e.target.value\n});\n\nexport const addLargeSample = () => ({\n  type: TYPESCALE_ACTIONS.ADD_LARGE_SAMPLE\n});\n\nexport const addSmallSample = () => ({\n  type: TYPESCALE_ACTIONS.ADD_SMALL_SAMPLE\n});\n","import React from 'react';\nimport { TextField } from '@material-ui/core';\n\nconst BodyForm = (props) => {\n  return (\n    <form>\n      <TextField \n        fullWidth={true} \n        margin=\"normal\"\n        select\n        id=\"bodyFont\"\n        label=\"Body Font\"\n        value={props.bodyFontFamily}\n        onChange={props.changeBodyFont}\n        SelectProps={{\n          native: true,\n        }}        \n        >\n          {props.fontFamilies.map(family => (\n            <option key={family} value={family}>\n              {family}\n            </option>\n          ))}\n      </TextField>\n\n        <TextField\n          type=\"number\"\n          id=\"bodyWeight\"\n          label=\"Body Weight\"\n          value={props.bodyWeight}\n          onChange={props.changeBodyWeight}\n          inputProps={{\n            step: 100,\n            min: 100,\n            max: 1000\n          }}\n          fullWidth={true}\n          margin=\"normal\"\n        />\n      <TextField\n        id=\"lineHeight\"\n        label=\"Line Height\"\n        type=\"number\"\n        inputProps={{\n          min: 0,\n          step: 0.25\n        }}\n        value={props.lineHeight}\n        onChange={props.changeLineHeight}\n        fullWidth={true}\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"backgroundColor\"\n        label=\"Background Color\"\n        value={props.backgroundColor}\n        onChange={props.changeBackgroundColor}\n        fullWidth={true}\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"fontColor\"\n        label=\"Font Color\"\n        value={props.bodyFontColor}\n        onChange={props.changeFontColor}\n        fullWidth={true}\n        margin=\"normal\"\n      />\n      <TextField\n        id=\"previewParagraph\"\n        label=\"Paragraph Preview Text\"\n        onChange={props.changePreviewParagraph}\n        value={props.previewParagraph}\n        multiline={true}\n        fullWidth={true}\n        margin=\"normal\"\n      />\n    </form>\n  );\n};\n\nexport default BodyForm;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BodyForm from './BodyForm';\nimport {\n  changeBodyWeight,\n  changeBodyFont,\n  changeLineHeight,\n  changeBackgroundColor,\n  changeFontColor,\n  changePreviewParagraph\n} from \"./BodyForm.actions\";\n\nclass BodyFormContainer extends Component {\n  render() {\n    const {\n      backgroundColor,\n      bodyWeight,\n      bodyFontColor,\n      bodyFont,\n      fontFamilies,\n      lineHeight,\n      previewParagraph,\n      changeBodyWeight,\n      changeBodyFont,\n      changeLineHeight,\n      changeBackgroundColor,\n      changeFontColor,\n      changePreviewParagraph\n    } = this.props;\n    return (\n      <BodyForm\n        backgroundColor={backgroundColor}\n        bodyFont={bodyFont}\n        bodyWeight={bodyWeight}\n        bodyFontColor={bodyFontColor}\n        fontFamilies={fontFamilies}\n        lineHeight={lineHeight}\n        previewParagraph={previewParagraph}\n        changeBodyWeight={changeBodyWeight}\n        changeBodyFont={changeBodyFont}\n        changeLineHeight={changeLineHeight}\n        changeBackgroundColor={changeBackgroundColor}\n        changeFontColor={changeFontColor}\n        changePreviewParagraph={changePreviewParagraph}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  backgroundColor: state.backgroundColor,\n  bodyWeight: state.bodyWeight,\n  bodyFontColor: state.bodyFontColor,\n  bodyFont: state.bodyFont,\n  fontFamilies: state.fontFamilies,\n  lineHeight: state.lineHeight,\n  previewParagraph: state.previewParagraph\n}); \n\nconst mapDispatchToProps = {\n  changeBodyWeight,\n  changeBodyFont,\n  changeLineHeight,\n  changeBackgroundColor,\n  changeFontColor,\n  changePreviewParagraph\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BodyFormContainer);","import { TYPESCALE_ACTIONS } from \"../reducers\";\n\nexport const changeBodyWeight = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_BODY_WEIGHT,\n  payload: e.target.value\n});\n\nexport const changeBodyFont = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_BODY_FONT,\n  payload: e.target.value\n});\n\nexport const changeLineHeight = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_LINE_HEIGHT,\n  payload: e.target.value\n});\n\nexport const changeBackgroundColor = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_BACKGROUND_COLOR,\n  payload: e\n});\n\nexport const changeFontColor = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_FONT_COLOR,\n  payload: e\n});\n\nexport const changePreviewParagraph = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_PREVIEW_PARAGRAPH,\n  payload: e.target.value\n})\n\n\n","import React, { Component } from 'react';\nimport SampleFormContainer from './SampleFormContainer';\nimport BodyFormContainer from './BodyFormContainer';\nimport styled from 'styled-components';\n\nconst StyledSidebar = styled.div`\n  margin: 0 15px;\n`;\n\nclass Sidebar extends Component {\n  render() {\n    return (\n      <StyledSidebar>\n        <SampleFormContainer />\n        <BodyFormContainer />\n      </StyledSidebar>\n    );\n  }\n}\n\nexport default Sidebar;","import React from 'react';\nimport styled from \"styled-components\"; \nimport '../fonts/fonts.css';\n\nconst SampleBody = styled.div`\n  line-height: 1.8;\n\n  .label {\n    color: ${props => props.theme.lightGray};\n    display: inline-block;\n    margin-right: 20px;\n    text-align: right;\n    width: 160px;\n  }\n`;\n\nconst countDecimals = (num) => {\n  if (Math.floor(num.valueOf()) === num.valueOf()) return 0;\n  return num.toString().split(\".\")[1].length || 0;\n}\n\nconst Sample = (props) => {\n  const baseSizeValue = props.baseSize * props.typeScaleValue;\n  const typeScaleEms = (countDecimals(props.typeScaleValue) > 3 ? props.typeScaleValue.toFixed(3) : props.typeScaleValue);\n  const typeScalePx = (countDecimals(baseSizeValue) > 2 ? baseSizeValue.toFixed(2) : baseSizeValue);\n  const styles = {\n    display: 'inline-block',\n    fontSize: `${typeScalePx}px`,\n    fontFamily: `${props.fontFamily}`,\n    fontWeight: `${props.sampleWeight}`,\n  };\n\n  return (\n    <SampleBody>\n      <span className=\"label\">\n        {typeScaleEms}em\n        ({typeScalePx}px)\n      </span>\n      <span className=\"value\" style={styles}>\n        {props.previewHeadline}\n      </span>\n    </SampleBody>\n  );\n};\n\nexport default Sample;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Sample from './Sample';\nimport styled from 'styled-components';\nimport { addLargeSample, addSmallSample } from './SampleForm.actions';\nimport { AddCircle } from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\n \nconst StyledList = styled.div`\n  color: ${props => props.theme.black};\n  list-style: none;\n  margin: 0;\n  padding: 0;\n\n  .icon-button {\n    margin-left: 150px;\n  }\n`;\n\nclass SampleList extends Component {\n  render() {\n    const {\n      addLargeSample,\n      addSmallSample,\n      baseSize,\n      fontFamily,\n      largeSamples,\n      smallSamples,\n      previewHeadline,\n      typeScaleSize,\n      sampleWeight\n    } = this.props;\n    const samples = [1];\n    for (let i = 1; i <= largeSamples; i++) {\n      samples.unshift(Math.pow(typeScaleSize, i));\n    }\n    for (let i = 1; i <= smallSamples; i++) {\n      samples.push(Math.pow(typeScaleSize, -i));\n    }\n\n    return (\n      <div>\n        <StyledList>\n        <IconButton aria-label=\"Add a large sample\" onClick={addLargeSample} className=\"icon-button\">\n          <AddCircle />\n        </IconButton>\n          {samples\n            .sort()\n            .reverse()\n            .map((sample, i) => (\n              <li key={`sample-${i}`}>\n                <Sample\n                  baseSize={baseSize}\n                  fontFamily={fontFamily}\n                  previewHeadline={previewHeadline}\n                  typeScaleSize={typeScaleSize}\n                  typeScaleValue={sample}\n                  sampleWeight={sampleWeight}\n                />\n              </li>\n            ))}\n          <IconButton aria-label=\"Add a small sample\" onClick={addSmallSample} className=\"icon-button\">\n            <AddCircle />\n          </IconButton>\n        </StyledList>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  baseSize: state.baseSize,\n  fontFamily: state.fontFamily,\n  numberOfSamples: state.numberOfSamples,\n  largeSamples: state.largeSamples,\n  smallSamples: state.smallSamples,\n  previewHeadline: state.previewHeadline,\n  typeScaleSize: state.typeScaleValues[state.typeScaleSelected].value,\n  sampleWeight: state.sampleWeight\n});\n\nconst mapDispatchToProps = {\n  addLargeSample,\n  addSmallSample\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SampleList);","import React from 'react';\n\nconst Heading = (props) => {\n  const fontSize = Math.pow(props.typeScaleSize, props.multiplier);\n  const fontSizeToPx = props.baseSize * fontSize;\n  const styles = {\n    fontFamily: `${props.fontFamily}`,\n    fontSize: `${fontSizeToPx}px`,\n    fontWeight: `${props.sampleWeight}`,\n    margin: '2rem 0 1rem'\n  };\n  const H = 'h' + props.level;\n  return (\n    <H style={styles}>{props.text}</H>\n  );\n};\n\nexport default Heading;","import React from 'react';\n\nconst Paragraph = (props) => {\n  const styles={\n    color: `${props.bodyFontColor}`,\n    lineHeight: `${props.lineHeight}`,\n    fontWeight: `${props.bodyWeight}`\n  }\n  return (\n    <p style={styles}>\n      {props.text}\n    </p>\n  );\n};\n\nexport default Paragraph;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport Heading from './Heading';\nimport Paragraph from './Paragraph';\n\nconst levels = [...Array(6).keys()].map(level => level + 1);\n\nclass BodyTypeTester extends Component {\n  render() {\n    const { \n      backgroundColor,\n      baseSize,\n      bodyFont,\n      bodyFontColor,\n      bodyWeight,\n      fontFamily, \n      lineHeight,\n      previewParagraph, \n      previewHeadline,\n      sampleWeight,\n      typeScaleSize\n    } = this.props;\n    const styles = {\n      backgroundColor: `${backgroundColor}`,\n      color: `${bodyFontColor}`,\n      fontFamily: `${bodyFont}`,\n    }\n    return (\n      <div style={styles}>\n        {levels.map((level, i, levels) => (\n          <div key={i}>\n            <Heading \n              baseSize={baseSize}\n              fontFamily={fontFamily}\n              sampleWeight={sampleWeight}\n              level={level}\n              multiplier={(levels.length - i) - 1}\n              text={previewHeadline}\n              typeScaleSize={typeScaleSize} />\n            <Paragraph \n              text={previewParagraph}\n              lineHeight={lineHeight}\n              bodyFont={bodyFont}\n              bodyFontColor={bodyFontColor}\n              bodyWeight={bodyWeight}\n            />  \n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  backgroundColor: state.backgroundColor,\n  baseSize: state.baseSize,\n  bodyFont: state.bodyFont,\n  bodyWeight: state.bodyWeight,\n  bodyFontColor: state.bodyFontColor,\n  fontFamily: state.fontFamily,\n  sampleWeight: state.sampleWeight,\n  lineHeight: state.lineHeight,\n  previewParagraph: state.previewParagraph,\n  previewHeadline: state.previewHeadline,\n  typeScaleSize: state.typeScaleValues[state.typeScaleSelected].value\n});\n\nexport default connect(\n  mapStateToProps,\n)(BodyTypeTester);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SampleList from \"./SampleList\";\nimport BodyTypeTester from \"./BodyTypeTester\";\n\nclass Main extends Component {\n  render() {\n    const {\n      backgroundColor\n    } = this.props;\n\n    const styles = {\n      backgroundColor: `${backgroundColor}`\n    } \n    return (\n      <main style={styles}>\n        <SampleList />\n        <BodyTypeTester />\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  backgroundColor: state.backgroundColor\n});\n\nexport default connect(\n  mapStateToProps,\n)(Main);","import React, { Component } from 'react';\nimport { ThemeProvider } from \"styled-components\";\nimport Sidebar from './components/Sidebar';\nimport styled from \"styled-components\";\nimport Main from './components/Main';\n\nconst theme = {\n  black: \"#333333\",\n  lightGray: \"#858585\",\n}\n\nconst StyledApp = styled.div`\n  display: grid;\n  grid-column-gap: 50px;\n  grid-template-columns: 350px 1fr;\n  margin: 0 15px;\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <StyledApp>\n          <aside>\n            <Sidebar />\n          </aside>\n          <Main />\n        </StyledApp>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { reducer } from \"../reducers\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nexport const store = createStore(\n  reducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  )\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from './serviceWorker';\nimport { store } from \"./store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}