{"version":3,"sources":["utilities/Colors.js","helpers.js","store/selectors.js","assets/modular-scale-logo.svg","components/Header.js","features/typeTester/controls/CustomExpansionPanel.style.js","features/typeTester/controls/CustomExpansionPanel.js","features/typeTester/controls/Form.style.js","components/CustomRadio.js","features/typeTester/controls/ColorPicker.js","features/typeTester/controls/BaseForm.js","reducers/index.js","features/typeTester/controls/BaseFormContainer.js","features/typeTester/actions/Controls.actions.js","features/typeTester/controls/HeadingForm.js","features/typeTester/controls/HeadingFormContainer.js","features/typeTester/controls/BodyForm.js","features/typeTester/controls/BodyFormContainer.js","features/typeTester/containers/Sidebar.js","components/UnitLabel.js","components/SampleItem.js","components/Heading.js","features/typeTester/modularScale/Sample.js","features/typeTester/modularScale/ScaleControl.js","components/CustomSwitch.js","features/typeTester/modularScale/SampleList.js","components/Paragraph.js","features/typeTester/bodyScale/BodyTypeTester.js","features/typeTester/containers/Main.js","features/typeTester/containers/BreakpointUp.js","App.js","serviceWorker.js","index.js","store/index.js"],"names":["Colors","APP_CONFIG","calculateFontSizes","baseSize","typeScaleValue","roundFontSizes","fontSize","fontSizePx","baseSizeValue","numDecimals","round","arguments","length","undefined","concat","roundOutput","calculateFontSizePx","fontSizeEms","calculateFontSizeEms","val","decimals","num","Math","floor","valueOf","toString","split","toFixed","fontValues","state","fonts","getFontName","fontArray","index","name","headingFontName","createSelector","headingFontSelected","headingFontIndex","bodyFontName","bodyFontSelected","bodyFontIndex","typeScaleValues","typeScaleSelected","typeScales","selectedIndex","value","theme","themes","themeSelected","themeValues","activeTheme","find","themeName","typeColor","themeColors","type","labelColor","labels","backgroundColor","background","_extends","Object","assign","target","i","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","modular_scale_logo_ref2","react_default","a","createElement","fillRule","clipRule","d","fill","_ref3","_ref4","modular_scale_logo_SvgModularScaleLogo","_ref","svgRef","props","width","height","viewBox","ref","ForwardRef","forwardRef","__webpack_require__","p","StyledHeader","styled","header","_templateObject","black","Header","className","CustomPadding","css","CustomExpansionPanel_style_templateObject","CustomExpansionPanelSummary","ExpansionPanelSummary","_templateObject2","fontFamily","CustomExpansionPanel","ExpansionPanel","_templateObject3","CustomExpansionPanelDetails","ExpansionPanelDetails","_templateObject4","MyCustomExpansionPanel","_React$useState","React","useState","expanded","_React$useState2","slicedToArray","setExpanded","onChange","event","newExpanded","expandIcon","Remove_default","Add_default","aria-controls","panelName","id","classes","root","summaryHeading","children","labelTypeStyles","Form_style_templateObject","CustomTextField","TextField","Form_style_templateObject2","CustomFormControlLabel","FormControlLabel","Form_style_templateObject3","CustomFormLabel","FormLabel","Form_style_templateObject4","CustomRadioButton","Radio","CustomRadio_templateObject","darkGray","shadowRadius","CustomRadio","selectedValue","handleChange","color","label","styles","checked","inputProps","aria-label","icon","FiberManualRecord_default","checkedIcon","style","ColorPicker","map","_ref2","colorValue","components_CustomRadio","GridRow","div","BaseForm_templateObject","BaseForm","changeBaseSize","min","fullWidth","margin","select","SelectProps","native","baseUnit","toggleUnits","typeUnits","unit","control","Checkbox_default","toggleRounding","tabIndex","changeTypeScale","component","controls_ColorPicker","changeTheme","TYPESCALE_ACTIONS","ADD_LARGE_SAMPLE","ADD_SMALL_SAMPLE","CHANGE_BASE_SIZE","CHANGE_BODY_WEIGHT","CHANGE_BODY_FONT","CHANGE_HEADING_FONT","CHANGE_HEADING_LINE_HEIGHT","CHANGE_HEADING_WEIGHT","CHANGE_LINE_HEIGHT","CHANGE_NUMBER_OF_SPECIMENS","CHANGE_PREVIEW_HEADLINE","CHANGE_PREVIEW_PARAGRAPH","CHANGE_SAMPLE_WEIGHT","CHANGE_THEME","CHANGE_TYPESCALE","REMOVE_LARGE_SAMPLE","REMOVE_SMALL_SAMPLE","TOGGLE_FOCUS_MODE","TOGGLE_ROUNDING","TOGGLE_UNITS","INITIAL_STATE","bodyLineHeight","bodyFont","bodyWeightSelected","previewParagraph","largeSamples","smallSamples","headingLineHeight","headingWeightSelected","focusMode","weights","previewHeadline","reducer","action","objectSpread","payload","numberOfSamples","BaseFormContainer","_this$props","typeScaleSize","controls_BaseForm","Component","mapDispatchToProps","e","parseInt","connect","HeadingForm","changeHeadingFont","font","changeHeadingWeight","weight","step","changeHeadingLineHeight","changePreviewHeadline","HeadingFormContainer","controls_HeadingForm","BodyForm","changeBodyFont","changeBodyWeight","changeLineHeight","changePreviewParagraph","multiline","BodyFormContainer","bodyTypeColor","changeTypeColor","controls_BodyForm","CHANGE_FONT_COLOR","Sidebar","CustomExpansionPanel_MyCustomExpansionPanel","controls_BaseFormContainer","controls_HeadingFormContainer","controls_BodyFormContainer","Label","UnitLabel_templateObject","alignLabel","labelMargin","UnitLabel","_ref$alignLabel","_ref$labelMargin","text","SampleBody","SampleItem_templateObject","SampleItem","focusState","components_UnitLabel","Heading","fontWeight","level","lineHeight","H","Sample","_calculateFontSizes","components_SampleItem","components_Heading","รง","ScaleControlSet","ScaleControl_templateObject","ScaleControl","incrementCounter","decrementCounter","incrementLabel","decrementLabel","_useState","_useState2","count","setCount","htmlFor","IconButton_default","onClick","disabled","index_es","max","StyledSwitch","Switch","CustomSwitch_templateObject","CustomSwitch","labelPlacement","labelPlacementStart","StyledList","SampleList_templateObject","SampleList","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","sampleList","generateSamples","prevProps","prevState","newSampleList","unshift","pow","push","setState","_this$props2","addLargeSample","addSmallSample","removeLargeSample","removeSmallSample","toggleFocusMode","modularScale_ScaleControl","components_CustomSwitch","sample","modularScale_Sample","quantity","Paragraph","levels","toConsumableArray","Array","BodyTypeTester","bodyWeight","headingFont","headingWeight","multiplier","marginTop","components_Paragraph","Main","modularScale_SampleList","bodyScale_BodyTypeTester","CustomHeading","h2","BreakpointUp_templateObject","customHeadingText","InvisibleButton","button","BreakpointUp_templateObject2","GridContainer","BreakpointUp_templateObject3","withWidth","base","controlsVisible","setControlVisibility","Hidden_default","smUp","KeyboardBackspace_default","Settings_default","smDown","containers_Sidebar","containers_Main","App","rangleTypescaleTheme","lightGray","white","styled_components_browser_esm","Fragment","components_Header","BreakpointUp","Boolean","window","location","hostname","match","ReactDOM","render","es","store","compose","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composeBase","createStore","applyMiddleware","thunk","createAppStore","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6RAAaA,EACJ,UADIA,EAED,UAFCA,EAGA,UAHAA,EAIJ,kBCJHC,EACS,EADTA,EAEU,EAmBHC,EAAqB,SAChCC,EACAC,EACAC,GAEA,IAAMC,EAA6BH,EAAUC,EAU7C,MAAO,CACLE,WACAC,WAvB+B,SACjCC,EACAC,GAFiC,IAGjCC,EAHiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,YAAAG,OAI3BC,EAAYP,EAAeC,EAAaC,GAJb,MAYdM,CACjBV,EACAL,EACAI,GASAY,YA3BgC,SAACb,EAAgBK,GAAjB,SAAAK,OAC/BC,EAAYX,EAAgBK,GADG,MAoBdS,CAClBd,EACAH,KAQSc,EAAc,SAACI,EAAKC,GAA4B,IArCvCC,EAsCpB,OAD2DV,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAElDW,KAAKZ,MAAMS,IAvCAE,EAyCGF,GAxCnBG,KAAKC,MAAMF,EAAIG,aAAeH,EAAIG,UAAkB,EACjDH,EAAII,WAAWC,MAAM,KAAK,GAAGd,QAAU,GAuChBQ,EAAWD,EAAIQ,QAAQP,GAAYD,ICzC7DS,EAAa,SAAAC,GAAK,OAAIA,EAAMC,OAO5BC,EAAc,SAACC,EAAWC,GAAZ,OAAsBD,EAAUC,GAAOC,MAI9CC,EAAkBC,YAAeR,EAVlB,SAAAC,GAAK,OAAIA,EAAMQ,qBAUoC,SAACP,EAAOQ,GAAR,OAA6BP,EAAYD,EAAOQ,KAElHC,EAAeH,YAAeR,EAdlB,SAAAC,GAAK,OAAIA,EAAMW,kBAciC,SAACV,EAAOW,GAAR,OAA0BV,EAAYD,EAAOW,KAEzGrC,EAAiBgC,YAXN,SAAAP,GAAK,OAAIA,EAAMa,iBACb,SAAAb,GAAK,OAAIA,EAAMc,mBAUwC,SAACC,EAAYC,GAAb,OAAiDD,EAAYC,GAN3EC,QAQtDC,EAAQX,YAfN,SAAAP,GAAK,OAAIA,EAAMmB,QACR,SAAAnB,GAAK,OAAIA,EAAMoB,eAcsB,SAACC,EAAaC,GAAd,OAA8BD,EAAYE,KAAK,SAAAL,GAAK,OAAIA,EAAMM,YAAcF,MAE1HG,EAAYlB,YAAeW,EAAQ,SAAAA,GAAK,OAAIA,EAAMQ,YAAYC,OAE9DC,EAAarB,YAAeW,EAAQ,SAAAA,GAAK,OAAIA,EAAMQ,YAAYG,SAE/DC,EAAkBvB,YAAeW,EAAQ,SAAAA,GAAK,OAAIA,EAAMQ,YAAYK,qBC5BjF,SAAAC,IAAmR,OAA9PA,EAAAC,OAAAC,QAAA,SAAAC,GAAgD,QAAAC,EAAA,EAAgBA,EAAAtD,UAAAC,OAAsBqD,IAAA,CAAO,IAAAC,EAAAvD,UAAAsD,GAA2B,QAAAE,KAAAD,EAA0BJ,OAAAM,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDH,EAAAG,GAAAD,EAAAC,IAAiC,OAAAH,IAAkBO,MAAAC,KAAA7D,WAEnR,SAAA8D,EAAAP,EAAAQ,GAAqD,SAAAR,EAAA,SAA+B,IAA8DC,EAAAF,EAA9DD,EAEpF,SAAAE,EAAAQ,GAA0D,SAAAR,EAAA,SAA+B,IAAuDC,EAAAF,EAAvDD,EAAA,GAAiBW,EAAAb,OAAAc,KAAAV,GAAkD,IAAAD,EAAA,EAAYA,EAAAU,EAAA/D,OAAuBqD,IAAOE,EAAAQ,EAAAV,GAAqBS,EAAAG,QAAAV,IAAA,IAA0CH,EAAAG,GAAAD,EAAAC,IAA6B,OAAAH,EAF9Mc,CAAAZ,EAAAQ,GAA0E,GAAAZ,OAAAiB,sBAAA,CAAoC,IAAAC,EAAAlB,OAAAiB,sBAAAb,GAA6D,IAAAD,EAAA,EAAYA,EAAAe,EAAApE,OAA6BqD,IAAOE,EAAAa,EAAAf,GAA2BS,EAAAG,QAAAV,IAAA,GAA0CL,OAAAM,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEH,EAAAG,GAAAD,EAAAC,IAA+B,OAAAH,EAM3d,IAAIkB,EAEJC,EAAAC,EAAKC,cAAA,QACLC,SAAA,UACAC,SAAA,UACAC,EAAA,gHACAC,KAAA,YAGAC,EAEAP,EAAAC,EAAKC,cAAA,QACLG,EAAA,2NACAC,KAAA,UAGAE,EAEAR,EAAAC,EAAKC,cAAA,QACLG,EAAA,oMACAC,KAAA,UAGIG,EAAmB,SAAAC,GACvB,IAAAC,EAAAD,EAAAC,OACAC,EAAAtB,EAAAoB,EAAA,YAEA,OAASV,EAAAC,EAAKC,cAAA,MAAAxB,EAAA,CACdmC,MAAA,GACAC,OAAA,GACAC,QAAA,YACAT,KAAA,OACAU,IAAAL,GACGC,GAAUb,EAAKQ,EAAAC,IAGlBS,EAAiBjB,EAAAC,EAAKiB,WAAA,SAAAN,EAAAI,GACtB,OAAShB,EAAAC,EAAKC,cAAeO,EAAmB/B,EAAA,CAChDiC,OAAAK,GACGJ,MAEYO,EAAAC,sUC7Cf,IAAMC,EAAeC,IAAOC,OAAVC,IACI,SAAAZ,GAAK,OAAIA,EAAMhD,MAAM6D,QA0B5BC,EAXA,SAACd,GACd,OACEZ,EAAAC,EAAAC,cAACmB,EAAD,KACErB,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,kBACb3B,EAAAC,EAAAC,cAACe,EAAD,MACAjB,EAAAC,EAAAC,cAAA,MAAIyB,UAAU,YAAd,kjCCpBR,IAAMC,GAAgBC,YAAHC,MAINC,GAA8BT,YAAOU,KAAPV,CAAHW,KACvB,SAAArB,GAAK,OAAIA,EAAMhD,MAAMsE,YAMzB,SAAAtB,GAAK,OAAIA,EAAMhD,MAAMO,WAC5ByD,GAIO,SAAAhB,GAAK,OAAIA,EAAMhD,MAAMO,YAcrBgE,GAAuBb,YAAOc,KAAPd,CAAHe,KAMP,SAAAzB,GAAK,OAAIA,EAAMhD,MAAMU,aAKlCgE,GAA8BhB,YAAOiB,KAAPjB,CAAHkB,KAElCZ,ICvCOa,GAAyB,SAAC7B,GAAU,IAAA8B,EACfC,IAAMC,SAAShC,EAAMiC,UADNC,EAAAnE,OAAAoE,EAAA,EAAApE,CAAA+D,EAAA,GACxCG,EADwCC,EAAA,GAC9BE,EAD8BF,EAAA,GAO/C,OACE9C,EAAAC,EAAAC,cAACiC,GAAD,CACEU,SAAUA,EACVI,SAP0B,SAACC,EAAOC,GACpCH,GAA4BH,KAQ1B7C,EAAAC,EAAAC,cAAC6B,GAAD,CACEqB,WAAYP,EAAW7C,EAAAC,EAAAC,cAACmD,GAAApD,EAAD,MAAiBD,EAAAC,EAAAC,cAACoD,EAAArD,EAAD,MACxCsD,gBAAA,GAAA5H,OAAkBiF,EAAM4C,UAAxB,YACAC,GAAE,GAAA9H,OAAKiF,EAAM4C,UAAX,WACFE,QAAS,CAAEC,KAAM,mCAEhB/C,EAAMgD,gBAET5D,EAAAC,EAAAC,cAACoC,GAAD,CACEoB,QAAS,CAAEC,KAAM,mCAEhB/C,EAAMiD,k6CC3BR,IAAMC,GAAkBjC,YAAHkC,KACjB,SAAAnD,GAAK,OAAIA,EAAMhD,MAAMU,YACf,SAAAsC,GAAK,OAAIA,EAAMhD,MAAMsE,aAOzB8B,GAAkB1C,YAAO2C,KAAP3C,CAAH4C,KAEtBJ,GAIO,SAAAlD,GAAK,OAAIA,EAAMhD,MAAMO,WAKrB,SAAAyC,GAAK,OAAIA,EAAMhD,MAAMO,WAIrB,SAAAyC,GAAK,OAAIA,EAAMhD,MAAMO,WAIP,SAAAyC,GAAK,OAAIA,EAAMhD,MAAMU,YAIrB,SAAAsC,GAAK,OAAIA,EAAMhD,MAAMO,YAInCgG,GAAyB7C,YAAO8C,KAAP9C,CAAH+C,KAE7BP,GAWO,SAAAlD,GAAK,OAAIA,EAAMhD,MAAMO,YAkBrBmG,GAAkBhD,YAAOiD,KAAPjD,CAAHkD,KAEtBV,oYCrEN,IAEMW,GAAoBnD,YAAOoD,KAAPpD,CAAHqD,KAEC,SAAA/D,GAAK,OAAIA,EAAMhD,MAAMgH,UACrBC,EAChB,SAAAjE,GAAK,OAAIA,EAAMhD,MAAMY,iBACTqG,EAPC,EAYqB,SAAAjE,GAAK,OAAIA,EAAMhD,MAAMY,iBACjDqG,EAAsB,SAAAjE,GAAK,OAAIA,EAAMhD,MAAMgH,WA4B1CE,GAxBK,SAAApE,GAA8D,IAA5DqE,EAA4DrE,EAA5DqE,cAAeC,EAA6CtE,EAA7CsE,aAAcrH,EAA+B+C,EAA/B/C,MAAOZ,EAAwB2D,EAAxB3D,KAAMkI,EAAkBvE,EAAlBuE,MAAOC,EAAWxE,EAAXwE,MAC/DC,EAAS,CACbF,MAAK,GAAAtJ,OAAKsJ,GACVzG,gBAAe,GAAA7C,OAAKsJ,IAGtB,OACEjF,EAAAC,EAAAC,cAACuE,GAAD,CACEW,QAASL,EACT9B,SAAU+B,EACVrH,MAAOA,EACPZ,KAAMA,EACNsI,WAAY,CAAEC,aAAcJ,GAC5BK,KAAMvF,EAAAC,EAAAC,cAACsF,GAAAvF,EAAD,CAAuB9E,SAAS,UACtCsK,YAAazF,EAAAC,EAAAC,cAACsF,GAAAvF,EAAD,CAAuB9E,SAAS,UAC7CuI,QAAS,CACPC,KAAM,sBACNyB,QAAS,gCAEXM,MAAOP,KCpBEQ,GAlBK,SAAAjF,GAA2C,IAAzC7C,EAAyC6C,EAAzC7C,OAAQC,EAAiC4C,EAAjC5C,cAAekH,EAAkBtE,EAAlBsE,aAC3C,OACEhF,EAAAC,EAAAC,cAAA,WACGrC,EAAO+H,IAAI,SAAAC,GAAA,IAAE3H,EAAF2H,EAAE3H,UAAW4H,EAAbD,EAAaC,WAAb,OACV9F,EAAAC,EAAAC,cAAC6F,GAAD,CACEhB,cAAejH,IAAkBI,EACjC8G,aAAcA,EACdrH,MAAOO,EACPnB,KAAK,qBACLmI,MAAOhH,EACP+G,MAAOa,EACP9G,IAAK8G,8LCRf,IAAME,GAAU1E,IAAO2E,IAAVC,MA0FEC,GAnFE,SAACvF,GAChB,OACEZ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC8F,GAAD,KACEhG,EAAAC,EAAAC,cAAC8D,GAAD,CACEP,GAAG,WACHyB,MAAM,iBACN7G,KAAK,SACLV,MAAOiD,EAAM5F,SACbiI,SAAUrC,EAAMwF,eAChBf,WAAY,CACVgB,IAAK,GAEPC,WAAW,EACXC,OAAO,SACP7C,QAAS,CACPC,KAAM,sDAGV3D,EAAAC,EAAAC,cAAC8D,GAAD,CACEP,GAAG,YACHyB,MAAM,YACNoB,WAAW,EACXC,OAAO,SACP7C,QAAS,CACPC,KAAM,oDAER6C,QAAM,EACNC,YAAa,CACXC,QAAQ,GAEV/I,MAAOiD,EAAM+F,SACb1D,SAAUrC,EAAMgG,aAEfhG,EAAMiG,UAAUjB,IAAI,SAACkB,EAAMhI,GAAP,OACnBkB,EAAAC,EAAAC,cAAA,UAAQvC,MAAOmJ,EAAM9H,IAAK8H,GACvBA,OAKT9G,EAAAC,EAAAC,cAACiE,GAAD,CACE4C,QACE/G,EAAAC,EAAAC,cAAC8G,GAAA/G,EAAD,CACEmF,QAASxE,EAAM1F,eACf+H,SAAUrC,EAAMqG,eAChB5B,WAAY,CACV6B,SAAU,KAIhBhC,MAAM,qBAERlF,EAAAC,EAAAC,cAAC8D,GAAD,CACEP,GAAG,YACHyB,MAAM,QACNoB,WAAW,EACXC,OAAO,SACPC,QAAM,EACNC,YAAa,CACXC,QAAQ,GAEV/I,MAAOiD,EAAMpD,kBACbyF,SAAUrC,EAAMuG,iBAEfvG,EAAMrD,gBAAgBqI,IAAI,SAACjI,EAAOmB,GAAR,OACzBkB,EAAAC,EAAAC,cAAA,UAAQvC,MAAOmB,EAAGE,IAAKrB,EAAMZ,MAC1BY,EAAMA,MADT,WACmBA,EAAMZ,SAI7BiD,EAAAC,EAAAC,cAACoE,GAAD,CAAiB8C,UAAU,SAAS1D,QAAS,CAAEC,KAAM,iBAArD,gBAGA3D,EAAAC,EAAAC,cAACmH,GAAD,CACErC,aAAcpE,EAAM0G,YACpBzJ,OAAQ+C,EAAM/C,OACdC,cAAe8C,EAAM9C,2BCxFhByJ,GAAoB,CAC/BC,iBAAkB,mBAClBC,iBAAkB,mBAClBC,iBAAkB,mBAClBC,mBAAoB,qBACpBC,iBAAkB,mBAClBC,oBAAqB,sBACrBC,2BAA4B,6BAC5BC,sBAAuB,wBACvBC,mBAAoB,qBACpBC,2BAA4B,6BAC5BC,wBAAyB,0BACzBC,yBAA0B,2BAC1BC,qBAAsB,uBACtBC,aAAc,eACdC,iBAAkB,mBAClBC,oBAAqB,sBACrBC,oBAAqB,sBACrBC,kBAAmB,oBACnBC,gBAAiB,kBACjBC,aAAc,gBAGHC,GAAgB,CAG3BC,eAAgB,IAChBC,SAAU,iBACVzL,iBAAkB,EAClB0L,mBAAoB,IACpBC,iBAAkB,oKAGlBC,aAAc,EACdC,aAAc,EAGdhM,oBAAqB,EACrBiM,kBAAmB,IACnBC,sBAAuB,IAGvBpO,SAAU,GACV2L,SAAU,KACV0C,WAAW,EACX1M,MAAO,CACL,CACEI,KAAM,iBACNuM,QAAS,CAAC,IAAK,IAAK,IAAK,IAAK,MAEhC,CACEvM,KAAM,UACNuM,QAAS,CAAC,IAAK,IAAK,IAAK,IAAK,OAGlCC,gBAAiB,4BACjBrO,gBAAgB,EAChB2C,OAAQ,CACN,CACEK,UAAW,QACX4H,WAAYjL,EACZuD,YAAa,CACXK,WAAY5D,EACZ0D,OAAQ1D,EACRwD,KAAMxD,IAGV,CACEqD,UAAW,OACX4H,WAAYjL,EACZuD,YAAa,CACXK,WAAY5D,EACZ0D,OAAQ1D,EACRwD,KAAMxD,KAIZiD,cAAe,QACfN,kBAAmB,EACnBD,gBAAiB,CACf,CACEI,MAAO,MACPZ,KAAM,gBAER,CACEY,MAAO,MACPZ,KAAM,gBAER,CACEY,MAAO,IACPZ,KAAM,eAER,CACEY,MAAO,KACPZ,KAAM,eAER,CACEY,MAAO,MACPZ,KAAM,kBAER,CACEY,MAAO,MACPZ,KAAM,oBAER,CACEY,MAAO,IACPZ,KAAM,iBAER,CACEY,MAAO,MACPZ,KAAM,iBAGV8J,UAAW,CACT,KACA,OAIS2C,GAAU,WAAmC,IAAlC9M,EAAkClB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1BoN,GAAea,EAAWjO,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxD,OAAQ+N,EAAOpL,MACb,KAAKkJ,GAAkBC,iBACrB,OAAO7I,OAAA+K,GAAA,EAAA/K,CAAA,GACFjC,EADL,CAEEuM,aAAevM,EAAMuM,cAAgBQ,EAAOE,UAGhD,KAAKpC,GAAkBE,iBACrB,OAAO9I,OAAA+K,GAAA,EAAA/K,CAAA,GACFjC,EADL,CAEEwM,aAAexM,EAAMwM,cAAgBO,EAAOE,UAGhD,KAAKpC,GAAkBG,iBACrB,OAAO/I,OAAA+K,GAAA,EAAA/K,CAAA,GACFjC,EADL,CAEE1B,SAAUyO,EAAOE,UAGrB,KAAKpC,GAAkBQ,sBACrB,OAAOpJ,OAAA+K,GAAA,EAAA/K,CAAA,GACFjC,EADL,CAEE0M,sBAAuBK,EAAOE,UAGlC,KAAKpC,GAAkBM,oBACrB,OAAOlJ,OAAA+K,GAAA,EAAA/K,CAAA,GACFjC,EADL,CAEEQ,oBAAqBuM,EAAOE,UAGhC,KAAKpC,GAAkBK,iBACrB,OAAOjJ,OAAA+K,GAAA,EAAA/K,CAAA,GACFjC,EADL,CAEEW,iBAAkBoM,EAAOE,UAG7B,KAAKpC,GAAkBI,mBACrB,OAAOhJ,OAAA+K,GAAA,EAAA/K,CAAA,GACFjC,EADL,CAEEqM,mBAAoBU,EAAOE,UAG/B,KAAKpC,GAAkBS,mBACrB,OAAOrJ,OAAA+K,GAAA,EAAA/K,CAAA,GACFjC,EADL,CAEEmM,eAAgBY,EAAOE,UAG3B,KAAKpC,GAAkBO,2BACrB,OAAOnJ,OAAA+K,GAAA,EAAA/K,CAAA,GACFjC,EADL,CAEEyM,kBAAmBM,EAAOE,UAG9B,KAAKpC,GAAkBU,2BACrB,OAAOtJ,OAAA+K,GAAA,EAAA/K,CAAA,GACFjC,EADL,CAEEkN,gBAAiBH,EAAOE,UAG5B,KAAKpC,GAAkBW,wBACrB,OAAOvJ,OAAA+K,GAAA,EAAA/K,CAAA,GACFjC,EADL,CAEE6M,gBAAiBE,EAAOE,UAG5B,KAAKpC,GAAkBY,yBACrB,OAAOxJ,OAAA+K,GAAA,EAAA/K,CAAA,GACFjC,EADL,CAEEsM,iBAAkBS,EAAOE,UAG7B,KAAKpC,GAAkBc,aACrB,OAAO1J,OAAA+K,GAAA,EAAA/K,CAAA,GACFjC,EADL,CAEEoB,cAAe2L,EAAOE,UAG1B,KAAKpC,GAAkBe,iBACrB,OAAO3J,OAAA+K,GAAA,EAAA/K,CAAA,GACFjC,EADL,CAEEc,kBAAmBiM,EAAOE,UAG9B,KAAKpC,GAAkBgB,oBACrB,OAAO5J,OAAA+K,GAAA,EAAA/K,CAAA,GACFjC,EADL,CAEEuM,aAAevM,EAAMuM,cAAgBQ,EAAOE,UAGhD,KAAKpC,GAAkBiB,oBACrB,OAAO7J,OAAA+K,GAAA,EAAA/K,CAAA,GACFjC,EADL,CAEEwM,aAAexM,EAAMwM,cAAgBO,EAAOE,UAGhD,KAAKpC,GAAkBkB,kBACrB,OAAO9J,OAAA+K,GAAA,EAAA/K,CAAA,GACFjC,EADL,CAEE2M,WAAY3M,EAAM2M,YAGtB,KAAK9B,GAAkBmB,gBACrB,OAAO/J,OAAA+K,GAAA,EAAA/K,CAAA,GACFjC,EADL,CAEExB,gBAAiBwB,EAAMxB,iBAG3B,KAAKqM,GAAkBoB,aACrB,OAAOhK,OAAA+K,GAAA,EAAA/K,CAAA,GACFjC,EADL,CAEEiK,SAAU8C,EAAOE,UAGrB,QACE,OAAOjN,IClOPmN,oLACK,IAAAC,EAkBHzK,KAAKuB,MAhBP5F,EAFK8O,EAEL9O,SACA2L,EAHKmD,EAGLnD,SACArI,EAJKwL,EAILxL,WACApD,EALK4O,EAKL5O,eACA2C,EANKiM,EAMLjM,OACAC,EAPKgM,EAOLhM,cACAK,EARK2L,EAQL3L,UACAX,EATKsM,EASLtM,kBACAuM,EAVKD,EAULC,cACAxM,EAXKuM,EAWLvM,gBACAsJ,EAZKiD,EAYLjD,UACAT,EAbK0D,EAaL1D,eACAkB,EAdKwC,EAcLxC,YACAH,EAfK2C,EAeL3C,gBACAF,EAhBK6C,EAgBL7C,eACAL,EAjBKkD,EAiBLlD,YAGF,OACE5G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8J,GAAD,CACEhP,SAAUA,EACV2L,SAAUA,EACVrI,WAAYA,EACZpD,eAAgBA,EAChB2C,OAAQA,EACRC,cAAeA,EACfK,UAAWA,EACX4L,cAAeA,EACfxM,gBAAiBA,EACjBC,kBAAmBA,EACnBqJ,UAAWA,EACXT,eAAgBA,EAChBkB,YAAaA,EACbH,gBAAiBA,EACjBF,eAAgBA,EAChBL,YAAaA,YAvCSqD,aA4D1BC,GAAqB,CACzB9D,eC5D4B,SAAA+D,GAAC,MAAK,CAClC9L,KAAMkJ,GAAkBG,iBACxBiC,QAASQ,EAAEtL,OAAOlB,QD2DlB2J,YCNyB,SAAA6C,GAAC,MAAK,CAC/B9L,KAAMkJ,GAAkBc,aACxBsB,QAASQ,EAAEtL,OAAOlB,QDKlBwJ,gBCF6B,SAAAgD,GAAC,MAAK,CACnC9L,KAAMkJ,GAAkBe,iBACxBqB,QAASS,SAASD,EAAEtL,OAAOlB,SDC3BsJ,eCgB4B,iBAAO,CACnC5I,KAAMkJ,GAAkBmB,kBDhBxB9B,YCmByB,SAAAuD,GAAC,MAAK,CAC/B9L,KAAMkJ,GAAkBoB,aACxBgB,QAASQ,EAAEtL,OAAOlB,SDlBL0M,eAtBS,SAAA3N,GAAK,MAAK,CAChC1B,SAAU0B,EAAM1B,SAChB2L,SAAUjK,EAAMiK,SAChBrI,WAAYA,EAAW5B,GACvBxB,eAAgBwB,EAAMxB,eACtB2C,OAAQnB,EAAMmB,OACdC,cAAepB,EAAMoB,cACrBK,UAAWA,EAAUzB,GACrBqN,cAAe9O,EAAeyB,GAC9Bc,kBAAmBd,EAAMc,kBACzBD,gBAAiBb,EAAMa,gBACvBsJ,UAAWnK,EAAMmK,YAajBqD,GAFaG,CAGbR,IEhBaS,GAhEK,SAAC1J,GACnB,OACEZ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC8D,GAAD,CACEkB,MAAM,eACNoB,WAAW,EACXC,OAAO,SACPC,QAAM,EACNC,YAAa,CACXC,QAAQ,GAEVjD,GAAG,cACH9F,MAAOiD,EAAM1D,oBACb+F,SAAUrC,EAAM2J,mBAEf3J,EAAMjE,MAAMiJ,IAAI,SAAC4E,EAAM1N,GAAP,OACfkD,EAAAC,EAAAC,cAAA,UAAQlB,IAAKwL,EAAKzN,KAAMY,MAAOb,GAC5B0N,EAAKzN,SAIZiD,EAAAC,EAAAC,cAAC8D,GAAD,CACEP,GAAG,gBACHyB,MAAM,iBACNoB,WAAW,EACXC,OAAO,SACPC,QAAM,EACNC,YAAa,CACXC,QAAQ,GAEV/I,MAAOiD,EAAMwI,sBACbnG,SAAUrC,EAAM6J,qBAEf7J,EAAMjE,MAAMiE,EAAM1D,qBAAqBoM,QAAQ1D,IAAI,SAAA8E,GAAM,OACxD1K,EAAAC,EAAAC,cAAA,UAAQlB,IAAK0L,EAAQ/M,MAAO+M,GACzBA,MAIP1K,EAAAC,EAAAC,cAAC8D,GAAD,CACEP,GAAG,aACHyB,MAAM,sBACN7G,KAAK,SACLgH,WAAY,CACVgB,IAAK,EACLsE,KAAM,IAERhN,MAAOiD,EAAMuI,kBACblG,SAAUrC,EAAMgK,wBAChBtE,WAAW,EACXC,OAAO,WAETvG,EAAAC,EAAAC,cAAC8D,GAAD,CACEP,GAAG,kBACHyB,MAAM,eACNvH,MAAOiD,EAAM2I,gBACbtG,SAAUrC,EAAMiK,sBAChBvE,WAAW,EACXC,OAAO,aCnDTuE,oLACK,IAAAhB,EAWHzK,KAAKuB,MATPjE,EAFKmN,EAELnN,MACAO,EAHK4M,EAGL5M,oBACAiM,EAJKW,EAILX,kBACAC,EALKU,EAKLV,sBACAG,EANKO,EAMLP,gBACAgB,EAPKT,EAOLS,kBACAK,EARKd,EAQLc,wBACAH,EATKX,EASLW,oBACAI,EAVKf,EAULe,sBAEF,OACE7K,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6K,GAAD,CACEpO,MAAOA,EACPO,oBAAqBA,EACrBiM,kBAAmBA,EACnBC,sBAAuBA,EACvBG,gBAAiBA,EACjBgB,kBAAmBA,EACnBE,oBAAqBA,EACrBI,sBAAuBA,EACvBD,wBAA2BA,YAxBFX,aAwC7BC,GAAqB,CACzBK,kBFvB+B,SAAAJ,GAAC,MAAK,CACrC9L,KAAMkJ,GAAkBM,oBACxB8B,QAASQ,EAAEtL,OAAOlB,QEsBlBiN,wBFnBqC,SAAAT,GAAC,MAAK,CAC3C9L,KAAMkJ,GAAkBO,2BACxB6B,QAASQ,EAAEtL,OAAOlB,QEkBlB8M,oBFfiC,SAAAN,GAAC,MAAK,CACvC9L,KAAMkJ,GAAkBQ,sBACxB4B,QAASQ,EAAEtL,OAAOlB,QEclBkN,sBFImC,SAAAV,GAAC,MAAK,CACzC9L,KAAMkJ,GAAkBW,wBACxByB,QAASQ,EAAEtL,OAAOlB,SEHL0M,eAhBS,SAAA3N,GAAK,MAAK,CAChC1B,SAAU0B,EAAM1B,SAChB2B,MAAOD,EAAMC,MACbO,oBAAqBR,EAAMQ,oBAC3BiM,kBAAmBzM,EAAMyM,kBACzBC,sBAAuB1M,EAAM0M,sBAC7BG,gBAAiB7M,EAAM6M,kBAYvBW,GAFaG,CAGbS,ICQaE,GAjEE,SAACpK,GAChB,OACEZ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC8D,GAAD,CACEsC,WAAW,EACXC,OAAO,SACPC,QAAM,EACN/C,GAAG,WACHyB,MAAM,YACNvH,MAAOiD,EAAMvD,iBACb4F,SAAUrC,EAAMqK,eAChBxE,YAAa,CACXC,QAAQ,IAGT9F,EAAMjE,MAAMiJ,IAAI,SAAC4E,EAAM1N,GAAP,OACfkD,EAAAC,EAAAC,cAAA,UAAQlB,IAAKwL,EAAKzN,KAAMY,MAAOb,GAC5B0N,EAAKzN,SAIZiD,EAAAC,EAAAC,cAAC8D,GAAD,CACEP,GAAG,aACHyB,MAAM,cACNoB,WAAW,EACXC,OAAO,SACPC,QAAM,EACNC,YAAa,CACXC,QAAQ,GAEV/I,MAAOiD,EAAMmI,mBACb9F,SAAUrC,EAAMsK,kBAEftK,EAAMjE,MAAMiE,EAAMvD,kBAAkBiM,QAAQ1D,IAAI,SAAA8E,GAAM,OACrD1K,EAAAC,EAAAC,cAAA,UAAQlB,IAAK0L,EAAQ/M,MAAO+M,GACzBA,MAIP1K,EAAAC,EAAAC,cAAC8D,GAAD,CACEP,GAAG,aACHyB,MAAM,cACN7G,KAAK,SACLgH,WAAY,CACVgB,IAAK,EACLsE,KAAM,IAERhN,MAAOiD,EAAMiI,eACb5F,SAAUrC,EAAMuK,iBAChB7E,WAAW,EACXC,OAAO,WAETvG,EAAAC,EAAAC,cAAC8D,GAAD,CACEP,GAAG,mBACHyB,MAAM,yBACNjC,SAAUrC,EAAMwK,uBAChBzN,MAAOiD,EAAMoI,iBACbqC,WAAW,EACX/E,WAAW,EACXC,OAAO,aCnDT+E,oLACK,IAAAxB,EAaHzK,KAAKuB,MAXP2K,EAFKzB,EAELyB,cACAlO,EAHKyM,EAGLzM,iBACA0L,EAJKe,EAILf,mBACApM,EALKmN,EAKLnN,MACAkM,EANKiB,EAMLjB,eACAG,EAPKc,EAOLd,iBACAkC,EARKpB,EAQLoB,iBACAD,EATKnB,EASLmB,eACAE,EAVKrB,EAULqB,iBACAK,EAXK1B,EAWL0B,gBACAJ,EAZKtB,EAYLsB,uBAEF,OACEpL,EAAAC,EAAAC,cAACuL,GAAD,CACEpO,iBAAkBA,EAClB0L,mBAAoBA,EACpBwC,cAAeA,EACf5O,MAAOA,EACPkM,eAAgBA,EAChBG,iBAAkBA,EAClBkC,iBAAkBA,EAClBD,eAAgBA,EAChBE,iBAAkBA,EAClBK,gBAAiBA,EACjBJ,uBAAwBA,WA3BAnB,aA0C1BC,GAAqB,CACzBgB,iBJpC8B,SAAAf,GAAC,MAAK,CACpC9L,KAAMkJ,GAAkBI,mBACxBgC,QAASQ,EAAEtL,OAAOlB,QImClBsN,eJhC4B,SAAAd,GAAC,MAAK,CAClC9L,KAAMkJ,GAAkBK,iBACxB+B,QAASQ,EAAEtL,OAAOlB,QI+BlBwN,iBJb8B,SAAAhB,GAAC,MAAK,CACpC9L,KAAMkJ,GAAkBS,mBACxB2B,QAASQ,EAAEtL,OAAOlB,QIYlB6N,gBJJ6B,SAAArB,GAAC,MAAK,CACnC9L,KAAMkJ,GAAkBmE,kBACxB/B,QAASQ,IIGTiB,uBJKoC,SAAAjB,GAAC,MAAK,CAC1C9L,KAAMkJ,GAAkBY,yBACxBwB,QAASQ,EAAEtL,OAAOlB,SIJL0M,eAjBS,SAAA3N,GAAK,MAAK,CAChC6O,cAAe7O,EAAM6O,cACrBlO,iBAAkBX,EAAMW,iBACxB0L,mBAAoBrM,EAAMqM,mBAC1BpM,MAAOD,EAAMC,MACbkM,eAAgBnM,EAAMmM,eACtBG,iBAAkBtM,EAAMsM,mBAaxBkB,GAFaG,CAGbiB,IC9BaK,GA5BC,WACd,OACE3L,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0L,GAAD,CACEpI,UAAU,WACVX,UAAU,EACVe,eAAe,iBAEf5D,EAAAC,EAAAC,cAAC2L,GAAD,OAEF7L,EAAAC,EAAAC,cAAC0L,GAAD,CACEpI,UAAU,cACVX,UAAU,EACVe,eAAe,WAEf5D,EAAAC,EAAAC,cAAC4L,GAAD,OAEF9L,EAAAC,EAAAC,cAAC0L,GAAD,CACEpI,UAAU,WACVX,UAAU,EACVe,eAAe,QAEf5D,EAAAC,EAAAC,cAAC6L,GAAD,qRCzBR,IAAMC,GAAQ1K,IAAO2E,IAAVgG,KACK,SAAArL,GAAK,OAAIA,EAAMsL,YAEpB,SAAAtL,GAAK,OAAIA,EAAMhD,MAAM6D,OAGpB,SAAAb,GAAK,OAAIA,EAAMuL,cAqBZC,GAfG,SAAA1L,GAIX,IAAA2L,EAAA3L,EAHLwL,kBAGK,IAAAG,EAHQ,SAGRA,EAAAC,EAAA5L,EAFLyL,mBAEK,IAAAG,EAFS,EAETA,EADLC,EACK7L,EADL6L,KAEA,OACEvM,EAAAC,EAAAC,cAAC8L,GAAD,CACEE,WAAYA,EACZC,YAAaA,GAEZI,gWCpBP,IAAMC,GAAalL,IAAO2E,IAAVwG,MAuCDC,GAxBI,SAAAhM,GAMb,IALJwL,EAKIxL,EALJwL,WACArI,EAIInD,EAJJmD,SACA8I,EAGIjM,EAHJiM,WACAR,EAEIzL,EAFJyL,YACAI,EACI7L,EADJ6L,KAGA,OACEvM,EAAAC,EAAAC,cAACsM,GAAD,MACIG,GACA3M,EAAAC,EAAAC,cAAC0M,GAAD,CACEV,WAAYA,EACZC,YAAaA,EACbI,KAAMA,IAGVvM,EAAAC,EAAAC,cAAA,WACG2D,KCZMgJ,GAxBC,SAAAnM,GAQV,IAPJwB,EAOIxB,EAPJwB,WACA/G,EAMIuF,EANJvF,SACA2R,EAKIpM,EALJoM,WACAC,EAIIrM,EAJJqM,MACAC,EAGItM,EAHJsM,WACAT,EAEI7L,EAFJ6L,KACApO,EACIuC,EADJvC,UAGMgH,EAAS,CACbF,MAAK,GAAAtJ,OAAKwC,GACV+D,WAAU,GAAAvG,OAAKuG,GACf/G,SAAQ,GAAAQ,OAAKR,GACb2R,WAAU,GAAAnR,OAAKmR,GACfE,WAAU,GAAArR,OAAKqR,GACfzG,OAAQ,KAEJ0G,EAAI,IAAMF,EAChB,OACE/M,EAAAC,EAAAC,cAAC+M,EAAD,CAAGvH,MAAOP,GAASoH,ICoBRW,GApCA,SAAAxM,GAWT,IAVJ1F,EAUI0F,EAVJ1F,SACA2L,EASIjG,EATJiG,SACAgG,EAQIjM,EARJiM,WACAzK,EAOIxB,EAPJwB,WACA4K,EAMIpM,EANJoM,WACAE,EAKItM,EALJsM,WACAzD,EAII7I,EAJJ6I,gBACArO,EAGIwF,EAHJxF,eACAiD,EAEIuC,EAFJvC,UACAlD,EACIyF,EADJzF,eACIkS,EAC0CpS,EAC5CC,EACAC,EACAC,GAHMC,EADJgS,EACIhS,SAAUC,EADd+R,EACc/R,WAAYU,EAD1BqR,EAC0BrR,YAK9B,OACEkE,EAAAC,EAAAC,cAACkN,GAAD,CACET,WAAYA,EACZJ,KAAmB,OAAb5F,EAAoBvL,EAAaU,GAEvCkE,EAAAC,EAAAC,cAACmN,GAAD,CACEnL,WAAYA,EACZ/G,SAAQ,GAAAQ,OAAKR,EAAL,MACR2R,WAAYA,EACZC,MAAO,EACPO,QAAC,EACDN,WAAYA,EACZT,KAAMhD,EACNpL,UAAWA,kcC9BnB,IAAMoP,GAAkBjM,IAAO2E,IAAVuH,KAKR,SAAA5M,GAAK,OAAIA,EAAMhD,MAAMO,WAgB5B2F,IA6CS2J,GAxCM,SAAA/M,GAA0E,IAAxEgN,EAAwEhN,EAAxEgN,iBAAkBC,EAAsDjN,EAAtDiN,iBAAkBC,EAAoClN,EAApCkN,eAAgBC,EAAoBnN,EAApBmN,eAAoBC,EACnElL,mBAAS,GAD0DmL,EAAApP,OAAAoE,EAAA,EAAApE,CAAAmP,EAAA,GACtFE,EADsFD,EAAA,GAC/EE,EAD+EF,EAAA,GAG7F,OACE/N,EAAAC,EAAAC,cAACqN,GAAD,KACEvN,EAAAC,EAAAC,cAAA,SAAOyB,UAAU,QAAQuM,QAAQ,oBAAjC,SAGAlO,EAAAC,EAAAC,cAACiO,GAAAlO,EAAD,CACEqF,aAAYsI,EACZQ,QAAS,kBAAMV,EAAiBM,IAChCK,SAAUL,EAAQ,EAClBtK,QAAS,CAAEC,KAAM,gBAEjB3D,EAAAC,EAAAC,cAACoO,GAAA,EAAD,OAEFtO,EAAAC,EAAAC,cAAC8D,GAAD,CACE3F,KAAK,SACLoF,GAAG,mBACH9F,MAAOqQ,EACP/K,SAAU,SAAAkH,GAAC,OAAI8D,EAAS7D,SAASD,EAAEtL,OAAOlB,SAC1C+H,MAAO,CAAE7E,MAAO,IAChB0F,OAAO,QACPlB,WAAY,CACVgB,IAAK,EACLkI,IAAK,KAGTvO,EAAAC,EAAAC,cAACiO,GAAAlO,EAAD,CACEqF,aAAYuI,EACZO,QAAS,kBAAMT,EAAiBK,IAChCrM,UAAU,cACV0M,SAAUL,EAAQ,GAElBhO,EAAAC,EAAAC,cAACoO,GAAA,EAAD,yGC5DR,IAAME,GAAelN,YAAOmN,KAAPnN,CAAHoN,MAgCHC,GA5BM,SAAAjO,GAAsC,IAAnC0E,EAAmC1E,EAAnC0E,QAASJ,EAA0BtE,EAA1BsE,aAAcE,EAAYxE,EAAZwE,MAM7C,OACElF,EAAAC,EAAAC,cAACiE,GAAD,CACE4C,QACE/G,EAAAC,EAAAC,cAACsO,GAAD,CACEpJ,QAASA,EACT1B,QAAS,CACPC,KAAM,wBACNyB,QAAS,kCAEXnC,SAAU+B,EACVrH,MAAM,aAGViR,eAAe,QACf1J,MAAOA,EACPxB,QAAS,CACPmL,oBAAqB,oVCrB7B,IAAMC,GAAaxN,IAAO2E,IAAV8I,KAEL,SAAAnO,GAAK,OAAIA,EAAMhD,MAAM6D,QAc1BuN,eACJ,SAAAA,EAAYpO,GAAO,IAAAqO,EAAA,OAAAtQ,OAAAuQ,EAAA,EAAAvQ,CAAAU,KAAA2P,IACjBC,EAAAtQ,OAAAwQ,EAAA,EAAAxQ,CAAAU,KAAAV,OAAAyQ,EAAA,EAAAzQ,CAAAqQ,GAAA7P,KAAAE,KAAMuB,KACDlE,MAAQ,CACX2S,WAAY,IAHGJ,mFAQjB5P,KAAKiQ,6DAGYC,EAAWC,GACvBnQ,KAAKuB,MAAMqI,eAAiBsG,EAAUtG,cACtC5J,KAAKuB,MAAMsI,eAAiBqG,EAAUrG,cACtC7J,KAAKuB,MAAMmJ,gBAAkBwF,EAAUxF,eAEtC1K,KAAKiQ,4DAOX,IAJgB,IAAAxF,EACsCzK,KAAKuB,MAAnDqI,EADQa,EACRb,aAAcC,EADNY,EACMZ,aAAca,EADpBD,EACoBC,cAC9B0F,EAAgB,CAAC,GAEd3Q,EAAI,EAAGA,GAAKmK,EAAcnK,IACjC2Q,EAAcC,QAAQvT,KAAKwT,IAAI5F,EAAejL,IAEhD,IAAK,IAAIA,EAAI,EAAGA,GAAKoK,EAAcpK,IACjC2Q,EAAcG,KAAKzT,KAAKwT,IAAI5F,GAAgBjL,IAG9CO,KAAKwQ,SAAS,CACZR,WAAYI,qCAIP,IAAAK,EAiBHzQ,KAAKuB,MAfPmP,EAFKD,EAELC,eACAC,EAHKF,EAGLE,eACAhV,EAJK8U,EAIL9U,SACA2L,EALKmJ,EAKLnJ,SACAgG,EANKmD,EAMLnD,WACAG,EAPKgD,EAOLhD,WACA5K,EARK4N,EAQL5N,WACAqH,EATKuG,EASLvG,gBACAyD,EAVK8C,EAUL9C,WACAiD,EAXKH,EAWLG,kBACAC,EAZKJ,EAYLI,kBACAhV,EAbK4U,EAaL5U,eACAiV,EAdKL,EAcLK,gBACAhS,EAfK2R,EAeL3R,UAGMkR,GAlBDS,EAgBLjP,MAEqBxB,KAAK3C,MAApB2S,YAER,OACIrP,EAAAC,EAAAC,cAAC4O,GAAD,KACE9O,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,YACb3B,EAAAC,EAAAC,cAACkQ,GAAD,CACExC,eAAe,qBACfF,iBAAkBqC,EAClBlC,eAAe,wBACfF,iBAAkBsC,IAEtBjQ,EAAAC,EAAAC,cAACmQ,GAAD,CACEjL,QAASuH,EACT3H,aAAcmL,EACdjL,MAAM,iBAGVlF,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,oBACZ0N,EACEzJ,IAAI,SAAC0K,EAAQxR,GAAT,OACHkB,EAAAC,EAAAC,cAAA,OAAKlB,IAAG,UAAArD,OAAYmD,IAClBkB,EAAAC,EAAAC,cAACqQ,GAAD,CACEvV,SAAUA,EACV2L,SAAUA,EACVgG,WAAYA,EACZzK,WAAYA,EACZ4K,WAAYA,EACZE,WAAYA,EACZzD,gBAAiBA,EACjBrO,eAAgBA,EAChBiD,UAAWA,EACXlD,eAAgBqV,QAK1BtQ,EAAAC,EAAAC,cAACkQ,GAAD,CACExC,eAAe,qBACfF,iBAAkBsC,EAClBnC,eAAe,wBACfF,iBAAkBuC,YA9FHjG,aAoHnBC,GAAqB,CACzB6F,eZ7I4B,SAACS,GAAD,MAAe,CAC3CnS,KAAMkJ,GAAkBC,iBACxBmC,QAAS6G,IY4ITR,eZzI4B,SAACQ,GAAD,MAAe,CAC3CnS,KAAMkJ,GAAkBE,iBACxBkC,QAAS6G,IYwITP,kBZpE+B,SAACO,GAAD,MAAe,CAC9CnS,KAAMkJ,GAAkBgB,oBACxBoB,QAAS6G,IYmETN,kBZhE+B,SAACM,GAAD,MAAe,CAC9CnS,KAAMkJ,GAAkBiB,oBACxBmB,QAAS6G,IY+DTL,gBZ5D6B,iBAAO,CACpC9R,KAAMkJ,GAAkBkB,qBY8DX4B,eAvBS,SAAA3N,GAAK,MAAK,CAChC1B,SAAU0B,EAAM1B,SAChB2L,SAAUjK,EAAMiK,SAChBgG,WAAYjQ,EAAM2M,UAClBnH,WAAYlF,EAAgBN,GAC5BoQ,WAAYpQ,EAAM0M,sBAClBH,aAAcvM,EAAMuM,aACpB+D,WAAYtQ,EAAMyM,kBAClBI,gBAAiB7M,EAAM6M,gBACvBrO,eAAgBwB,EAAMxB,eACtBgO,aAAcxM,EAAMwM,aACpB/K,UAAWA,EAAUzB,GACrBqN,cAAe9O,EAAeyB,KAa9BwN,GAFaG,CAGb2E,cCzIayB,GAfG,SAAA/P,GAA6D,IAA1DvC,EAA0DuC,EAA1DvC,UAAW+D,EAA+CxB,EAA/CwB,WAAY4K,EAAmCpM,EAAnCoM,WAAYE,EAAuBtM,EAAvBsM,WAAYT,EAAW7L,EAAX6L,KAC5DpH,EAAO,CACXF,MAAK,GAAAtJ,OAAKwC,GACV+D,WAAU,GAAAvG,OAAKuG,GACf4K,WAAU,GAAAnR,OAAKmR,GACfE,WAAU,GAAArR,OAAKqR,IAGjB,OACEhN,EAAAC,EAAAC,cAAA,KAAGwF,MAAOP,GACPoH,ICJDmE,GAAS/R,OAAAgS,GAAA,EAAAhS,CAAIiS,MAAM,GAAGnR,QAAQmG,IAAI,SAAAmH,GAAK,OAAIA,EAAQ,IAEnD8D,oLACK,IAAA/G,EAgBHzK,KAAKuB,MAdP5F,EAFK8O,EAEL9O,SACA2L,EAHKmD,EAGLnD,SACAmC,EAJKgB,EAILhB,SACAD,EALKiB,EAKLjB,eACAiI,EANKhH,EAMLgH,WACAnE,EAPK7C,EAOL6C,WACAoE,EARKjH,EAQLiH,YACA5H,EATKW,EASLX,kBACA6H,EAVKlH,EAULkH,cACAhI,EAXKc,EAWLd,iBACAO,EAZKO,EAYLP,gBACArO,EAbK4O,EAaL5O,eACAiD,EAdK2L,EAcL3L,UACA4L,EAfKD,EAeLC,cAGF,OACE/J,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,oBACZ+O,GAAO9K,IAAI,SAACmH,EAAOjO,EAAG4R,GAErB,IAAMO,EAAcP,EAAOjV,OAASqD,EAAK,EACnC7D,EAAiBkB,KAAKwT,IAAI5F,EAAekH,GAHf9D,EAIapS,EAAmBC,EAAUC,EAAgBC,GAAlFC,EAJwBgS,EAIxBhS,SAAUC,EAJc+R,EAId/R,WAAYU,EAJEqR,EAIFrR,YAIxBoV,EAAS,GAAAvV,OAAM,IAAMsV,EAAZ,MAEf,OACEjR,EAAAC,EAAAC,cAACkN,GAAD,CACElB,WAAW,QACXC,YAAW,GAAAxQ,OAAKuV,EAAL,QACXlS,IAAKF,EACL6N,WAAYA,EACZJ,KAAmB,OAAb5F,EAAoBvL,EAAaU,GAEtCkE,EAAAC,EAAAC,cAACmN,GAAD,CACGnL,WAAY6O,EACZ5V,SAAQ,GAAAQ,OAAKR,EAAL,MACR2R,WAAYkE,EACZjE,MAAOA,EACPC,WAAY7D,EACZoD,KAAMhD,EACNpL,UAAWA,IAEb6B,EAAAC,EAAAC,cAACiR,GAAD,CACEjP,WAAY4G,EACZgE,WAAYgE,EACZ9D,WAAYnE,EACZ0D,KAAMvD,EACN7K,UAAWA,eArDA8L,aAiFdI,eAlBS,SAAA3N,GAAK,MAAK,CAChC1B,SAAU0B,EAAM1B,SAChB2L,SAAUjK,EAAMiK,SAChB4E,cAAe7O,EAAM6O,cACrBzC,SAAU1L,EAAaV,GACvBmM,eAAgBnM,EAAMmM,eACtBiI,WAAYpU,EAAMqM,mBAClB4D,WAAYjQ,EAAM2M,UAClB0H,YAAa/T,EAAgBN,GAC7ByM,kBAAmBzM,EAAMyM,kBACzB6H,cAAetU,EAAM0M,sBACrBJ,iBAAkBtM,EAAMsM,iBACxBO,gBAAiB7M,EAAM6M,gBACvBrO,eAAgBwB,EAAMxB,eACtBiD,UAAWA,EAAUzB,GACrBqN,cAAe9O,EAAeyB,KAGjB2N,CAEbwG,IChFaO,GATF,WACX,OACEpR,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACmR,GAAD,MACArR,EAAAC,EAAAC,cAACoR,GAAD,owBCCN,IAAMC,GAAgBjQ,IAAOkQ,GAAVC,KACR,SAAA7Q,GAAK,OAAIA,EAAMhD,MAAMO,YAY1BuT,GAAoB,gBAEpBC,GAAkBrQ,IAAOsQ,OAAVC,MAOfC,GAAgBxQ,IAAO2E,IAAV8L,MAuEJC,aApDf,SAA6BpR,GAAO,IAIfqR,EAJenE,EACclL,oBAAS,GADvBmL,EAAApP,OAAAoE,EAAA,EAAApE,CAAAmP,EAAA,GAC3BoE,EAD2BnE,EAAA,GACVoE,EADUpE,EAAA,GAE1BlN,EAAUD,EAAVC,MAWR,OACEb,EAAAC,EAAAC,cAAC4R,GAAD,KACE9R,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,WACb3B,EAAAC,EAAAC,cAACkS,EAAAnS,EAAD,CAAQoS,MAAI,GACVrS,EAAAC,EAAAC,cAACyR,GAAD,CACEtT,KAAK,SACL+P,QAAS,kBAAM+D,GAAsBD,KACrClS,EAAAC,EAAAC,cAACqR,GAAD,KACEvR,EAAAC,EAAAC,cAAA,QAAMyB,UAAU,QAEZuQ,EACAlS,EAAAC,EAAAC,cAACoS,EAAArS,EAAD,MACAD,EAAAC,EAAAC,cAACqS,EAAAtS,EAAD,OAGHyR,OAKT1R,EAAAC,EAAAC,cAAA,OAAKyB,WA7BUsQ,EADD,UAEZrR,EAAMyI,UACR,GAAA1N,OAAUsW,EAAV,UACmB,OAAVpR,GAA4B,OAAVA,GAAmBD,EAAMyI,UAG/C4I,EAFL,GAAAtW,OAAUsW,EAAV,WA0BEjS,EAAAC,EAAAC,cAACkS,EAAAnS,EAAD,CAAQuS,QAA4B,IAApBN,EAA2BG,KAAMzR,EAAMyI,WACrDrJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkS,EAAAnS,EAAD,CAAQuS,QAA4B,IAApBN,GACdlS,EAAAC,EAAAC,cAACqR,GAAD,KACGG,KAGL1R,EAAAC,EAAAC,cAACuS,GAAD,QAGJzS,EAAAC,EAAAC,cAACkS,EAAAnS,EAAD,CAAQuS,OAAQN,GACdlS,EAAAC,EAAAC,cAACwS,GAAD,WCvFJC,oLAEK,IAAA7I,EAOHzK,KAAKuB,MALPpC,EAFKsL,EAELtL,gBACA6K,EAHKS,EAGLT,UACA/K,EAJKwL,EAILxL,WACAR,EALKgM,EAKLhM,cACAK,EANK2L,EAML3L,UAGEyU,EAAuB,CAC3BnR,MAAO5G,EACP+J,SAAU/J,EACVqH,WAAY,qCACZ2Q,UAAWhY,EACXiY,MAAOjY,EACP2D,kBACAF,aACAH,aAGA,OACE6B,EAAAC,EAAAC,cAAC6S,EAAA,EAAD,CAAenV,MAAOgV,GACpB5S,EAAAC,EAAAC,cAAA,OAAKyB,UAAW7D,EAAgB,SAC9BkC,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+S,SAAA,KACEhT,EAAAC,EAAAC,cAAC+S,EAAD,MACAjT,EAAAC,EAAAC,cAACgT,GAAD,CACE7J,UAAWA,EACXvL,cAAeA,cA7BXmM,aA8CHI,eARS,SAAA3N,GAAK,MAAK,CAChC8B,gBAAiBA,EAAgB9B,GACjC2M,UAAW3M,EAAM2M,UACjB/K,WAAYA,EAAW5B,GACvByB,UAAWA,EAAUzB,GACrBoB,cAAepB,EAAMoB,gBAGRuM,CAEbsI,IC5CkBQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kFCVNC,IAASC,OACPzT,EAAAC,EAAAC,cAACwT,EAAA,EAAD,CAAUC,MCLkB,WAC5B,IAAMC,EACHR,OAAOS,sCAAwCT,OAAOS,sCACpDC,KAEL,OAAOC,aACLvK,GACAoK,EACEI,aAAgBC,QDHHC,IACflU,EAAAC,EAAAC,cAACiU,GAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.87985ab0.chunk.js","sourcesContent":["export const Colors = {\n  black: \"#262626\",\n  darkGray: \"#737373\",\n  lightGray: \"#b5b5b5\",\n  white: \"#ffffff\"\n}\n","const APP_CONFIG = {\n  PX_DECIMALS: 2,\n  EMS_DECIMALS: 3\n};\n\nconst countDecimals = num => {\n  if (Math.floor(num.valueOf()) === num.valueOf()) return 0;\n  return num.toString().split(\".\")[1].length || 0;\n};\n\nexport const calculateTypeSize = (base, multiplier) => base * multiplier;\n\nexport const calculateFontSizeEms = (typeScaleValue, numDecimals) =>\n  `${roundOutput(typeScaleValue, numDecimals)}em`;\n\nexport const calculateFontSizePx = (\n  baseSizeValue,\n  numDecimals,\n  round = false\n) => `${roundOutput(baseSizeValue, numDecimals, round)}px`;\n\nexport const calculateFontSizes = (\n  baseSize,\n  typeScaleValue,\n  roundFontSizes\n) => {\n  const fontSize = calculateTypeSize(baseSize, typeScaleValue);\n  const fontSizePx = calculateFontSizePx(\n    fontSize,\n    APP_CONFIG.PX_DECIMALS,\n    roundFontSizes\n  );\n  const fontSizeEms = calculateFontSizeEms(\n    typeScaleValue,\n    APP_CONFIG.EMS_DECIMALS\n  );\n  return {\n    fontSize,\n    fontSizePx,\n    fontSizeEms\n  };\n};\nexport const roundOutput = (val, decimals, round = false) => {\n  if (round) {\n    return Math.round(val);\n  } else {\n    return countDecimals(val) > decimals ? val.toFixed(decimals) : val;\n  }\n};\n","import { createSelector } from 'reselect';\nimport { calculateTypeSize } from '../helpers';\n\nconst baseSize = state => state.baseSize;\nconst bodyFontSelected = state => state.bodyFontSelected;\nconst fontValues = state => state.fonts;\nconst headingFontSelected = state => state.headingFontSelected;\nconst themes = state => state.themes;\nconst themeSelected = state => state.themeSelected;\nconst typeScaleValues = state => state.typeScaleValues;\nconst typeScaleSelected = state => state.typeScaleSelected;\n\nconst getFontName = (fontArray, index) => fontArray[index].name;\n\nconst getTypeScaleValue = (scaleArray, index) => scaleArray[index].value; \n\nexport const headingFontName = createSelector(fontValues, headingFontSelected, (fonts, headingFontIndex) => getFontName(fonts, headingFontIndex));\n\nexport const bodyFontName = createSelector(fontValues, bodyFontSelected, (fonts, bodyFontIndex) => getFontName(fonts, bodyFontIndex));\n\nexport const typeScaleValue = createSelector(typeScaleValues, typeScaleSelected, (typeScales, selectedIndex) => getTypeScaleValue(typeScales, selectedIndex));\n\nexport const theme = createSelector(themes, themeSelected, (themeValues, activeTheme) => themeValues.find(theme => theme.themeName === activeTheme));\n\nexport const typeColor = createSelector(theme, (theme => theme.themeColors.type));\n\nexport const labelColor = createSelector(theme, (theme => theme.themeColors.labels));\n\nexport const backgroundColor = createSelector(theme, (theme => theme.themeColors.background));\n\n\n\n\n\n\n\n\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z\",\n  fill: \"#D44527\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M19.056 25H21.216L16.656 13.8H14.576L10.016 25H12.176L13.152 22.52H18.08L19.056 25ZM14.592 18.888C14.992 17.88 15.344 16.76 15.584 15.96H15.648C15.888 16.76 16.208 17.8 16.64 18.888L17.376 20.76H13.856L14.592 18.888Z\",\n  fill: \"white\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M28.66 25H30.01L27.16 18H25.86L23.01 25H24.36L24.97 23.45H28.05L28.66 25ZM25.87 21.18C26.12 20.55 26.34 19.85 26.49 19.35H26.53C26.68 19.85 26.88 20.5 27.15 21.18L27.61 22.35H25.41L25.87 21.18Z\",\n  fill: \"white\"\n});\n\nvar SvgModularScaleLogo = function SvgModularScaleLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 40,\n    viewBox: \"0 0 40 40\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgModularScaleLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/modular-scale-logo.fb5eae44.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport styled from 'styled-components';\nimport { ReactComponent as Logo } from '../assets/modular-scale-logo.svg';\n\nconst StyledHeader = styled.header`\n  background-color: ${props => props.theme.black};\n  color: white;\n  padding: 20px 0;\n\n  h1.headline {\n    font-size: 1.25rem; /* 20px */\n    line-height: 1.2; /* 24px */\n    margin-left: 28px;\n  }\n  .wrapper.header {\n    align-items: center;\n    display: flex;\n  }\n`;\n\nconst Header = (props) => {\n  return (\n    <StyledHeader>\n      <div className=\"wrapper header\">\n        <Logo />\n        <h1 className=\"headline\">Modular Scale</h1>\n      </div>\n    </StyledHeader>\n  );\n};\n\nexport default Header;","import styled, { css } from \"styled-components\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\n\nconst CustomPadding = css`\n  padding: 0;\n`;\n\nexport const CustomExpansionPanelSummary = styled(ExpansionPanelSummary)`\n  font-family: ${props => props.theme.fontFamily};\n  font-size: 1.250em;\n  font-weight: 700;\n  line-height: 1.5;\n\n  &.custom-expansion-panel-summary {\n    color: ${props => props.theme.typeColor};\n    ${CustomPadding}\n  }\n\n  & [class*=\"expandIcon\"] {\n    color: ${props => props.theme.typeColor};\n    right: 0;\n  }\n\n  & [class*=\"content\"] {\n    margin: 20px 0;\n  }\n\n  & [class*=\"MuiIconButton\"] {\n    padding-left: 0;\n    padding-right: 0;\n  }\n`;\n\nexport const CustomExpansionPanel = styled(ExpansionPanel)`\n  &[class*=\"MuiPaper-elevation\"] {\n    background-color: transparent;\n    box-shadow: none;\n\n    &::before {\n      background-color: ${props => props.theme.labelColor};\n    }\n  }\n`;\n\nexport const CustomExpansionPanelDetails = styled(ExpansionPanelDetails)`\n  &.custom-expansion-panel-details {\n    ${CustomPadding}\n  }\n`;","import React from 'react';\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport {\n  CustomExpansionPanelSummary,\n  CustomExpansionPanel,\n  CustomExpansionPanelDetails\n} from \"./CustomExpansionPanel.style\";\n\nexport const MyCustomExpansionPanel = (props) => {\n  const [expanded, setExpanded] = React.useState(props.expanded);\n\n  const handleChange = panel => (event, newExpanded) => {\n    setExpanded((newExpanded = !expanded));\n  };\n\n  return (\n    <CustomExpansionPanel\n      expanded={expanded}\n      onChange={handleChange(\"panel\")}\n    >\n      <CustomExpansionPanelSummary\n        expandIcon={expanded ? <RemoveIcon /> : <AddIcon />}\n        aria-controls={`${props.panelName}-content`}\n        id={`${props.panelName}-header`}\n        classes={{ root: \"custom-expansion-panel-summary\" }}\n      >\n        {props.summaryHeading}\n      </CustomExpansionPanelSummary>\n      <CustomExpansionPanelDetails\n        classes={{ root: \"custom-expansion-panel-details\" }}\n      >\n        {props.children}\n      </CustomExpansionPanelDetails>\n    </CustomExpansionPanel>\n  );\n};\n\nexport default MyCustomExpansionPanel;","import styled, { css } from \"styled-components\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nexport const labelTypeStyles = css`\n  color: ${props => props.theme.labelColor};\n  font-family: ${props => props.theme.fontFamily};\n  font-size: 1rem;\n  letter-spacing: 0.4px;\n  line-height: 20px;\n  text-transform: uppercase;\n`;\n\nexport const CustomTextField = styled(TextField)`\n  & > label {\n    ${labelTypeStyles}\n  }\n\n  & > label[class*=\"focused\"] {\n    color: ${props => props.theme.typeColor};\n    font-weight: 700;\n  }\n\n  & [class*=\"icon\"] {\n    color: ${props => props.theme.typeColor};\n  }\n\n  & [class*=\"input\"] {\n    color: ${props => props.theme.typeColor};\n  }\n\n  & [class*=\"underline\"]:before {\n    border-bottom-color: ${props => props.theme.labelColor};\n  }\n\n  & [class*=\"underline\"]:after {\n    border-bottom-color: ${props => props.theme.typeColor};\n  }\n`;\n\nexport const CustomFormControlLabel = styled(FormControlLabel)`\n  & > span {\n    ${labelTypeStyles}\n    font-size: .75em;\n    margin-bottom: 0;\n  }\n\n  & [class*=\"bar\"] {\n    background-color: #1FC028;\n    opacity: 1;\n  }\n\n  & span[class*=\"Checkbox-checked\"] {\n    color: ${props => props.theme.typeColor};\n  }\n\n  & span[class*=\"Switch-iconChecked\"] {\n    color: #fafafa;\n  }\n\n  & [class*=\"checked\"][class*=\"colorSecondary\"] + [class*=\"bar\"] {\n      background-color: #D44527;\n      opacity: 1;\n  }\n\n  &.control-label-top {\n    line-height: 2.5;\n    margin: 15px 0 0;\n  }\n`;\n\nexport const CustomFormLabel = styled(FormLabel)`\n  &.label-legend {\n    ${labelTypeStyles}\n    font-size: .75em;\n    margin: 15px 0 10px;\n  }\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport Radio from \"@material-ui/core/Radio\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\n\nconst shadowRadius = 3;\n\nconst CustomRadioButton = styled(Radio)`\n  &.custom-radio-button {\n    border: 1px solid ${props => props.theme.darkGray};\n    box-shadow: 0 0 0 ${shadowRadius * 2}px\n      ${props => props.theme.backgroundColor};\n    margin: 0 8px ${shadowRadius * 2}px;\n    padding: 0;\n  }\n\n  &.custom-radio-button__checked[class*=\"colorSecondary\"] {\n    box-shadow: 0 0 0 ${shadowRadius}px ${props => props.theme.backgroundColor},\n      0 0 0 ${shadowRadius * 2}px ${props => props.theme.darkGray};\n  }\n`;\n\nconst CustomRadio = ({selectedValue, handleChange, value, name, color, label}) => {\n  const styles = {\n    color: `${color}`,\n    backgroundColor: `${color}`\n  };\n\n  return (\n    <CustomRadioButton\n      checked={selectedValue}\n      onChange={handleChange}\n      value={value}\n      name={name}\n      inputProps={{ \"aria-label\": label }}\n      icon={<FiberManualRecordIcon fontSize=\"small\" />}\n      checkedIcon={<FiberManualRecordIcon fontSize=\"small\" />}\n      classes={{\n        root: \"custom-radio-button\",\n        checked: \"custom-radio-button__checked\",\n      }}\n      style={styles}\n    />\n  );\n};\n\nexport default CustomRadio;","import React from 'react';\nimport CustomRadio from '../../../components/CustomRadio';\n\nconst ColorPicker = ({themes, themeSelected, handleChange}) => {\n  return (\n    <div>\n      {themes.map(({themeName, colorValue}) => (\n        <CustomRadio\n          selectedValue={themeSelected === themeName}\n          handleChange={handleChange}\n          value={themeName}\n          name=\"theme-color-picker\"\n          label={themeName}\n          color={colorValue}\n          key={colorValue}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ColorPicker;","import React from 'react';\nimport styled from 'styled-components';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { CustomFormControlLabel, CustomTextField, CustomFormLabel } from \"./Form.style\";\nimport ColorPicker from './ColorPicker';\n\nconst GridRow = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-column-gap: 25px;\n  margin-bottom: 5px;\n`;\n\nconst BaseForm = (props) => {\n  return (\n    <form>\n      <GridRow>\n        <CustomTextField\n          id=\"baseSize\"\n          label=\"Base Size (px)\"\n          type=\"number\"\n          value={props.baseSize}\n          onChange={props.changeBaseSize}\n          inputProps={{\n            min: 1\n          }}\n          fullWidth={true}\n          margin=\"normal\"\n          classes={{\n            root: \"custom-text-field, custom-text-field--half-width\"\n          }}\n        />\n        <CustomTextField\n          id=\"typeUnits\"\n          label=\"Type Unit\"\n          fullWidth={true}\n          margin=\"normal\"\n          classes={{\n            root: \"custom-text-field, custom-text-field--half-width\"\n          }}\n          select\n          SelectProps={{\n            native: true\n          }}\n          value={props.baseUnit}\n          onChange={props.toggleUnits}\n        >\n          {props.typeUnits.map((unit, i) => (\n            <option value={unit} key={unit}>\n              {unit}\n            </option>\n          ))}\n        </CustomTextField>\n      </GridRow>\n      <CustomFormControlLabel\n        control={\n          <Checkbox\n            checked={props.roundFontSizes}\n            onChange={props.toggleRounding}\n            inputProps={{\n              tabIndex: 0\n            }}\n          />\n        }\n        label=\"Round Font Sizes\"\n      />\n      <CustomTextField\n        id=\"typeScale\"\n        label=\"Scale\"\n        fullWidth={true}\n        margin=\"normal\"\n        select\n        SelectProps={{\n          native: true\n        }}\n        value={props.typeScaleSelected}\n        onChange={props.changeTypeScale}\n      >\n        {props.typeScaleValues.map((value, i) => (\n          <option value={i} key={value.name}>\n            {value.value} โ {value.name}\n          </option>\n        ))}\n      </CustomTextField>\n      <CustomFormLabel component=\"legend\" classes={{ root: \"label-legend\" }}>\n        Colour Theme\n      </CustomFormLabel>\n      <ColorPicker\n        handleChange={props.changeTheme}\n        themes={props.themes}\n        themeSelected={props.themeSelected}\n      />\n    </form>\n  );\n};\n\nexport default BaseForm;","import { Colors } from '../utilities/Colors';\n\nexport const TYPESCALE_ACTIONS = {\n  ADD_LARGE_SAMPLE: 'ADD_LARGE_SAMPLE',\n  ADD_SMALL_SAMPLE: 'ADD_SMALL_SAMPLE',\n  CHANGE_BASE_SIZE: 'CHANGE_BASE_SIZE',\n  CHANGE_BODY_WEIGHT: 'CHANGE_BODY_WEIGHT',\n  CHANGE_BODY_FONT: 'CHANGE_BODY_FONT',\n  CHANGE_HEADING_FONT: 'CHANGE_HEADING_FONT',\n  CHANGE_HEADING_LINE_HEIGHT: 'CHANGE_HEADING_LINE_HEIGHT',\n  CHANGE_HEADING_WEIGHT: 'CHANGE_HEADING_WEIGHT',\n  CHANGE_LINE_HEIGHT: 'CHANGE_LINE_HEIGHT',\n  CHANGE_NUMBER_OF_SPECIMENS: 'CHANGE_NUMBER_OF_SPECIMENS',\n  CHANGE_PREVIEW_HEADLINE: 'CHANGE_PREVIEW_HEADLINE',\n  CHANGE_PREVIEW_PARAGRAPH: 'CHANGE_PREVIEW_PARAGRAPH',\n  CHANGE_SAMPLE_WEIGHT: 'CHANGE_SAMPLE_WEIGHT',\n  CHANGE_THEME: 'CHANGE_THEME',\n  CHANGE_TYPESCALE: 'CHANGE_TYPESCALE',\n  REMOVE_LARGE_SAMPLE: 'REMOVE_LARGE_SAMPLE',\n  REMOVE_SMALL_SAMPLE: 'REMOVE_SMALL_SAMPLE',\n  TOGGLE_FOCUS_MODE: 'TOGGLE_FOCUS_MODE',\n  TOGGLE_ROUNDING: 'TOGGLE_ROUNDING',\n  TOGGLE_UNITS: 'TOGGLE_UNITS'\n};\n\nexport const INITIAL_STATE = {\n  \n  /* body text */\n  bodyLineHeight: 1.5,\n  bodyFont: \"Rangle Riforma\",\n  bodyFontSelected: 0,\n  bodyWeightSelected: 400,\n  previewParagraph: \"Guesswork isnโt in our toolkit. Through discovery, empathy, and relentless curiosity, we partner with clients to identify, frame, and build the right thing.\",\n  \n  /* type samples */\n  largeSamples: 5,\n  smallSamples: 5,\n\n  /* heading fonts */\n  headingFontSelected: 0,\n  headingLineHeight: 1.5,\n  headingWeightSelected: 400,\n  \n  /* base */\n  baseSize: 16,\n  baseUnit: \"px\",\n  focusMode: false,\n  fonts: [\n    {\n      name: \"Rangle Riforma\",\n      weights: [300, 400, 500, 700, 900]\n    },\n    {\n      name: \"Georgia\",\n      weights: [300, 400, 500, 700, 900]\n    }\n  ],\n  previewHeadline: \"Making things that matter\",\n  roundFontSizes: true,\n  themes: [\n    {\n      themeName: \"light\",\n      colorValue: Colors.white,\n      themeColors: {\n        background: Colors.white,\n        labels: Colors.darkGray,\n        type: Colors.black,\n      }\n    },\n    {\n      themeName: \"dark\",\n      colorValue: Colors.black,\n      themeColors: {\n        background: Colors.black,\n        labels: Colors.lightGray,\n        type: Colors.white,\n      }\n    }\n  ],\n  themeSelected: \"light\",\n  typeScaleSelected: 2,\n  typeScaleValues: [\n    {\n      value: 1.067,\n      name: \"Minor Second\"\n    },\n    {\n      value: 1.125,\n      name: \"Major Second\"\n    },\n    {\n      value: 1.2,\n      name: \"Minor Third\"\n    },\n    {\n      value: 1.250,\n      name: \"Major Third\"\n    },\n    {\n      value: 1.333,\n      name: \"Perfect Fourth\"\n    },\n    {\n      value: 1.414,\n      name: \"Augmented Fourth\"\n    },\n    {\n      value: 1.500,\n      name: \"Perfect Fifth\"\n    },\n    {\n      value: 1.618,\n      name: \"Golden Ratio\"\n    }\n  ],\n  typeUnits: [\n    \"px\",\n    \"em\"\n  ]\n};\n\nexport const reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TYPESCALE_ACTIONS.ADD_LARGE_SAMPLE: {\n      return {\n        ...state,\n        largeSamples: (state.largeSamples += action.payload)\n      };\n    }\n    case TYPESCALE_ACTIONS.ADD_SMALL_SAMPLE: {\n      return {\n        ...state,\n        smallSamples: (state.smallSamples += action.payload)\n      };\n    }\n    case TYPESCALE_ACTIONS.CHANGE_BASE_SIZE: {\n      return {\n        ...state,\n        baseSize: action.payload\n      };\n    }\n    case TYPESCALE_ACTIONS.CHANGE_HEADING_WEIGHT: {\n      return {\n        ...state,\n        headingWeightSelected: action.payload\n      };\n    }\n    case TYPESCALE_ACTIONS.CHANGE_HEADING_FONT: {\n      return {\n        ...state,\n        headingFontSelected: action.payload\n      };\n    }\n    case TYPESCALE_ACTIONS.CHANGE_BODY_FONT: {\n      return {\n        ...state,\n        bodyFontSelected: action.payload\n      };\n    }\n    case TYPESCALE_ACTIONS.CHANGE_BODY_WEIGHT: {\n      return {\n        ...state,\n        bodyWeightSelected: action.payload\n      };\n    }\n    case TYPESCALE_ACTIONS.CHANGE_LINE_HEIGHT: {\n      return {\n        ...state,\n        bodyLineHeight: action.payload\n      };\n    }\n    case TYPESCALE_ACTIONS.CHANGE_HEADING_LINE_HEIGHT: {\n      return {\n        ...state,\n        headingLineHeight: action.payload\n      };\n    }\n    case TYPESCALE_ACTIONS.CHANGE_NUMBER_OF_SPECIMENS: {\n      return {\n        ...state,\n        numberOfSamples: action.payload\n      };\n    }\n    case TYPESCALE_ACTIONS.CHANGE_PREVIEW_HEADLINE: {\n      return {\n        ...state,\n        previewHeadline: action.payload\n      };\n    }\n    case TYPESCALE_ACTIONS.CHANGE_PREVIEW_PARAGRAPH: {\n      return {\n        ...state,\n        previewParagraph: action.payload\n      };\n    }\n    case TYPESCALE_ACTIONS.CHANGE_THEME: {\n      return {\n        ...state,\n        themeSelected: action.payload\n      };\n    }\n    case TYPESCALE_ACTIONS.CHANGE_TYPESCALE: {\n      return {\n        ...state,\n        typeScaleSelected: action.payload\n      };\n    }\n    case TYPESCALE_ACTIONS.REMOVE_LARGE_SAMPLE: {\n      return {\n        ...state,\n        largeSamples: (state.largeSamples -= action.payload)\n      };\n    }\n    case TYPESCALE_ACTIONS.REMOVE_SMALL_SAMPLE: {\n      return {\n        ...state,\n        smallSamples: (state.smallSamples -= action.payload)\n      };\n    }\n    case TYPESCALE_ACTIONS.TOGGLE_FOCUS_MODE: {\n      return {\n        ...state,\n        focusMode: !state.focusMode\n      };\n    }\n    case TYPESCALE_ACTIONS.TOGGLE_ROUNDING: {\n      return {\n        ...state,\n        roundFontSizes: !state.roundFontSizes\n      };\n    }\n    case TYPESCALE_ACTIONS.TOGGLE_UNITS: {\n      return {\n        ...state,\n        baseUnit: action.payload\n      }\n    }\n    default:\n      return state;\n  }\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BaseForm from './BaseForm';\nimport {\n  changeBaseSize, \n  changeTheme,\n  changeTypeScale,\n  toggleRounding,\n  toggleUnits\n} from '../actions/Controls.actions';\nimport { typeScaleValue, labelColor, typeColor } from '../../../store/selectors';\n\nclass BaseFormContainer extends Component {\n  render() {\n    const { \n      baseSize, \n      baseUnit,\n      labelColor,\n      roundFontSizes,\n      themes,\n      themeSelected,\n      typeColor,\n      typeScaleSelected,\n      typeScaleSize, \n      typeScaleValues, \n      typeUnits,\n      changeBaseSize, \n      changeTheme,\n      changeTypeScale,\n      toggleRounding,\n      toggleUnits\n    } = this.props;\n\n    return (\n      <div>\n        <BaseForm \n          baseSize={baseSize}\n          baseUnit={baseUnit}\n          labelColor={labelColor}\n          roundFontSizes={roundFontSizes}\n          themes={themes}\n          themeSelected={themeSelected}\n          typeColor={typeColor}\n          typeScaleSize={typeScaleSize}\n          typeScaleValues={typeScaleValues}\n          typeScaleSelected={typeScaleSelected}\n          typeUnits={typeUnits}\n          changeBaseSize={changeBaseSize}\n          changeTheme={changeTheme}\n          changeTypeScale={changeTypeScale}\n          toggleRounding={toggleRounding}\n          toggleUnits={toggleUnits}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  baseSize: state.baseSize,\n  baseUnit: state.baseUnit,\n  labelColor: labelColor(state),\n  roundFontSizes: state.roundFontSizes,\n  themes: state.themes,\n  themeSelected: state.themeSelected,\n  typeColor: typeColor(state),\n  typeScaleSize: typeScaleValue(state),\n  typeScaleSelected: state.typeScaleSelected,\n  typeScaleValues: state.typeScaleValues,\n  typeUnits: state.typeUnits\n});\n\nconst mapDispatchToProps = {\n  changeBaseSize,\n  changeTheme,\n  changeTypeScale,\n  toggleRounding,\n  toggleUnits\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BaseFormContainer);","\nimport { TYPESCALE_ACTIONS } from '../../../reducers/index';\n\nexport const addLargeSample = (quantity) => ({\n  type: TYPESCALE_ACTIONS.ADD_LARGE_SAMPLE,\n  payload: quantity\n});\n\nexport const addSmallSample = (quantity) => ({\n  type: TYPESCALE_ACTIONS.ADD_SMALL_SAMPLE,\n  payload: quantity\n});\n\nexport const changeBaseSize = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_BASE_SIZE,\n  payload: e.target.value\n});    \n\nexport const changeBodyWeight = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_BODY_WEIGHT,\n  payload: e.target.value\n});\n\nexport const changeBodyFont = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_BODY_FONT,\n  payload: e.target.value\n});\n\nexport const changeHeadingFont = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_HEADING_FONT,\n  payload: e.target.value\n});\n\nexport const changeHeadingLineHeight = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_HEADING_LINE_HEIGHT,\n  payload: e.target.value\n});\n\nexport const changeHeadingWeight = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_HEADING_WEIGHT,\n  payload: e.target.value\n});\n\nexport const changeLineHeight = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_LINE_HEIGHT,\n  payload: e.target.value\n});\n\nexport const changeBackgroundColor = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_BACKGROUND_COLOR,\n  payload: e\n});\n\nexport const changeTypeColor = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_FONT_COLOR,\n  payload: e\n});\n\nexport const changePreviewHeadline = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_PREVIEW_HEADLINE,\n  payload: e.target.value\n});\n\nexport const changePreviewParagraph = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_PREVIEW_PARAGRAPH,\n  payload: e.target.value\n});\n\nexport const changeTheme = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_THEME,\n  payload: e.target.value\n});\n\nexport const changeTypeScale = e => ({\n  type: TYPESCALE_ACTIONS.CHANGE_TYPESCALE,\n  payload: parseInt(e.target.value)\n});\n\nexport const removeLargeSample = (quantity) => ({\n  type: TYPESCALE_ACTIONS.REMOVE_LARGE_SAMPLE,\n  payload: quantity\n});\n\nexport const removeSmallSample = (quantity) => ({\n  type: TYPESCALE_ACTIONS.REMOVE_SMALL_SAMPLE,\n  payload: quantity\n});\n\nexport const toggleFocusMode = () => ({\n  type: TYPESCALE_ACTIONS.TOGGLE_FOCUS_MODE\n});\n\nexport const toggleRounding = () => ({\n  type: TYPESCALE_ACTIONS.TOGGLE_ROUNDING\n});\n\nexport const toggleUnits = e => ({\n  type: TYPESCALE_ACTIONS.TOGGLE_UNITS,\n  payload: e.target.value\n});\n\n\n\n","import React from 'react';\nimport { CustomTextField } from './Form.style';\n\nconst HeadingForm = (props) => {\n  return (\n    <form>\n      <CustomTextField\n        label=\"Heading Font\"\n        fullWidth={true}\n        margin=\"normal\"\n        select\n        SelectProps={{\n          native: true\n        }}\n        id=\"headingFont\"\n        value={props.headingFontSelected}\n        onChange={props.changeHeadingFont}\n      >\n        {props.fonts.map((font, index) => (\n          <option key={font.name} value={index}>\n            {font.name}\n          </option>\n        ))}\n      </CustomTextField>\n      <CustomTextField\n        id=\"headingWeight\"\n        label=\"Heading Weight\"\n        fullWidth={true}\n        margin=\"normal\"\n        select\n        SelectProps={{\n          native: true\n        }}\n        value={props.headingWeightSelected}\n        onChange={props.changeHeadingWeight}\n      >\n        {props.fonts[props.headingFontSelected].weights.map(weight => (\n          <option key={weight} value={weight}>\n            {weight}\n          </option>\n        ))}\n      </CustomTextField>\n      <CustomTextField\n        id=\"lineHeight\"\n        label=\"Heading Line Height\"\n        type=\"number\"\n        inputProps={{\n          min: 0,\n          step: 0.1\n        }}\n        value={props.headingLineHeight}\n        onChange={props.changeHeadingLineHeight}\n        fullWidth={true}\n        margin=\"normal\"\n      />\n      <CustomTextField\n        id=\"previewHeadline\"\n        label=\"Heading Text\"\n        value={props.previewHeadline}\n        onChange={props.changePreviewHeadline}\n        fullWidth={true}\n        margin=\"normal\"\n      />\n    </form>\n  );\n};\n\nexport default HeadingForm;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport HeadingForm from './HeadingForm';\nimport {\n  changeHeadingFont,\n  changeHeadingLineHeight,\n  changeHeadingWeight,\n  changePreviewHeadline,\n} from '../actions/Controls.actions';\n\nclass HeadingFormContainer extends Component {\n  render() {\n    const { \n      fonts,\n      headingFontSelected,\n      headingLineHeight,\n      headingWeightSelected,\n      previewHeadline, \n      changeHeadingFont,\n      changeHeadingLineHeight,\n      changeHeadingWeight,\n      changePreviewHeadline\n    } = this.props;\n    return (\n      <div>\n        <HeadingForm \n          fonts={fonts}\n          headingFontSelected={headingFontSelected}\n          headingLineHeight={headingLineHeight}\n          headingWeightSelected={headingWeightSelected}\n          previewHeadline={previewHeadline}\n          changeHeadingFont={changeHeadingFont}\n          changeHeadingWeight={changeHeadingWeight}\n          changePreviewHeadline={changePreviewHeadline}\n          changeHeadingLineHeight={  changeHeadingLineHeight}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  baseSize: state.baseSize,\n  fonts: state.fonts,\n  headingFontSelected: state.headingFontSelected,\n  headingLineHeight: state.headingLineHeight,\n  headingWeightSelected: state.headingWeightSelected,\n  previewHeadline: state.previewHeadline,\n});\n\nconst mapDispatchToProps = {\n  changeHeadingFont,\n  changeHeadingLineHeight,\n  changeHeadingWeight,\n  changePreviewHeadline,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HeadingFormContainer);","import React from 'react';\nimport { CustomTextField } from './Form.style';\n\nconst BodyForm = (props) => {\n  return (\n    <form>\n      <CustomTextField\n        fullWidth={true}\n        margin=\"normal\"\n        select\n        id=\"bodyFont\"\n        label=\"Body Font\"\n        value={props.bodyFontSelected}\n        onChange={props.changeBodyFont}\n        SelectProps={{\n          native: true\n        }}\n      >\n        {props.fonts.map((font, index) => (\n          <option key={font.name} value={index}>\n            {font.name}\n          </option>\n        ))}\n      </CustomTextField>\n      <CustomTextField\n        id=\"bodyWeight\"\n        label=\"Body Weight\"\n        fullWidth={true}\n        margin=\"normal\"\n        select\n        SelectProps={{\n          native: true\n        }}\n        value={props.bodyWeightSelected}\n        onChange={props.changeBodyWeight}\n      >\n        {props.fonts[props.bodyFontSelected].weights.map(weight => (\n          <option key={weight} value={weight}>\n            {weight}\n          </option>\n        ))}\n      </CustomTextField>\n      <CustomTextField\n        id=\"lineHeight\"\n        label=\"Line Height\"\n        type=\"number\"\n        inputProps={{\n          min: 0,\n          step: 0.1\n        }}\n        value={props.bodyLineHeight}\n        onChange={props.changeLineHeight}\n        fullWidth={true}\n        margin=\"normal\"\n      />\n      <CustomTextField\n        id=\"previewParagraph\"\n        label=\"Paragraph Preview Text\"\n        onChange={props.changePreviewParagraph}\n        value={props.previewParagraph}\n        multiline={true}\n        fullWidth={true}\n        margin=\"normal\"\n      />\n    </form>\n  );\n};\n\nexport default BodyForm;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport BodyForm from './BodyForm';\nimport {\n  changeBodyWeight,\n  changeBodyFont,\n  changeLineHeight,\n  changeTypeColor,\n  changePreviewParagraph\n} from \"../actions/Controls.actions\";\n\nclass BodyFormContainer extends Component {\n  render() {\n    const {\n      bodyTypeColor,\n      bodyFontSelected,\n      bodyWeightSelected,\n      fonts,\n      bodyLineHeight,\n      previewParagraph,\n      changeBodyWeight,\n      changeBodyFont,\n      changeLineHeight,\n      changeTypeColor,\n      changePreviewParagraph\n    } = this.props;\n    return (\n      <BodyForm\n        bodyFontSelected={bodyFontSelected}\n        bodyWeightSelected={bodyWeightSelected}\n        bodyTypeColor={bodyTypeColor}\n        fonts={fonts}\n        bodyLineHeight={bodyLineHeight}\n        previewParagraph={previewParagraph}\n        changeBodyWeight={changeBodyWeight}\n        changeBodyFont={changeBodyFont}\n        changeLineHeight={changeLineHeight}\n        changeTypeColor={changeTypeColor}\n        changePreviewParagraph={changePreviewParagraph}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  bodyTypeColor: state.bodyTypeColor,\n  bodyFontSelected: state.bodyFontSelected,\n  bodyWeightSelected: state.bodyWeightSelected,\n  fonts: state.fonts,\n  bodyLineHeight: state.bodyLineHeight,\n  previewParagraph: state.previewParagraph\n}); \n\nconst mapDispatchToProps = {\n  changeBodyWeight,\n  changeBodyFont,\n  changeLineHeight,\n  changeTypeColor,\n  changePreviewParagraph\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BodyFormContainer);","import React from \"react\";\nimport { MyCustomExpansionPanel } from \"../controls/CustomExpansionPanel\";\nimport BaseFormContainer from \"../controls/BaseFormContainer\";\nimport HeadingFormContainer from \"../controls/HeadingFormContainer\";\nimport BodyFormContainer from \"../controls/BodyFormContainer\";\n\nconst Sidebar = () => {\n  return (\n    <div>\n      <MyCustomExpansionPanel\n        panelName=\"baseForm\"\n        expanded={true}\n        summaryHeading=\"Modular Scale\"\n      >\n        <BaseFormContainer />\n      </MyCustomExpansionPanel>\n      <MyCustomExpansionPanel\n        panelName=\"headingForm\"\n        expanded={true}\n        summaryHeading=\"Heading\"\n      >\n        <HeadingFormContainer />\n      </MyCustomExpansionPanel>\n      <MyCustomExpansionPanel\n        panelName=\"bodyForm\"\n        expanded={false}\n        summaryHeading=\"Body\"\n      >\n        <BodyFormContainer />\n      </MyCustomExpansionPanel>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Label = styled.div`\n  align-self: ${props => props.alignLabel};\n  background-color: #F0F4F6;\n  color: ${props => props.theme.black};\n  display: inline-block;\n  font-size: 0.875em;\n  margin: ${props => props.labelMargin};\n  padding: 3px 0;\n  text-align: center;\n  width: 70px;\n`;\n\nconst UnitLabel = ({ \n  alignLabel = \"center\",\n  labelMargin = 0,\n  text\n }) => {\n  return (\n    <Label \n      alignLabel={alignLabel}\n      labelMargin={labelMargin}\n    >\n      {text}\n    </Label>\n  );\n};\n\nexport default UnitLabel;","import React from 'react';\nimport styled from \"styled-components\";\nimport '../fonts/fonts.css';\nimport UnitLabel from './UnitLabel';\n\nconst SampleBody = styled.div`\n  align-items: center;\n  display: grid;\n  grid-column-gap: 20px;\n  grid-template-columns: auto 1fr;\n  margin-bottom: 30px;\n\n  @media (max-width: 1000px) {\n    grid-auto-flow: row;\n    grid-column-gap: 0;\n    grid-row-gap: 5px;\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst SampleItem = ({\n  alignLabel,\n  children,\n  focusState,\n  labelMargin,\n  text\n}) => {\n\n  return (\n    <SampleBody>\n      {!focusState &&\n        <UnitLabel\n          alignLabel={alignLabel}\n          labelMargin={labelMargin}\n          text={text}\n        />\n      }\n      <div>\n        {children}\n      </div>\n    </SampleBody>\n  );\n};\n\nexport default SampleItem;","import React from 'react';\n\nconst Heading = ({\n  fontFamily,\n  fontSize,\n  fontWeight,\n  level,\n  lineHeight,\n  text,\n  typeColor,\n}) => {\n  \n  const styles = {\n    color: `${typeColor}`,\n    fontFamily: `${fontFamily}`,\n    fontSize: `${fontSize}`,\n    fontWeight: `${fontWeight}`,\n    lineHeight: `${lineHeight}`,\n    margin: '0'\n  };\n  const H = 'h' + level;\n  return (\n    <H style={styles}>{text}</H>\n  );\n};\n\nexport default Heading;","import React from \"react\";\nimport \"../../../fonts/fonts.css\";\nimport { calculateFontSizes } from \"../../../helpers\";\nimport SampleItem from \"../../../components/SampleItem\";\nimport Heading from \"../../../components/Heading\";\n\nconst Sample = ({\n  baseSize,\n  baseUnit,\n  focusState,\n  fontFamily,\n  fontWeight,\n  lineHeight,\n  previewHeadline,\n  roundFontSizes,\n  typeColor,\n  typeScaleValue\n}) => {\n  const { fontSize, fontSizePx, fontSizeEms } = calculateFontSizes(\n    baseSize,\n    typeScaleValue,\n    roundFontSizes\n  );\n  return (\n    <SampleItem\n      focusState={focusState}\n      text={baseUnit === \"px\" ? fontSizePx : fontSizeEms}\n    >\n      <Heading\n        fontFamily={fontFamily}\n        fontSize={`${fontSize}px`}\n        fontWeight={fontWeight}\n        level={1}\n        รง\n        lineHeight={lineHeight}\n        text={previewHeadline}\n        typeColor={typeColor}\n      />\n    </SampleItem>\n  );\n};\n\nexport default Sample;\n","import React, { useState } from 'react';\nimport { AddBox, IndeterminateCheckBox } from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { CustomTextField, labelTypeStyles, CustomFormLabel } from \"../controls/Form.style\";\nimport styled from 'styled-components';\n\nconst ScaleControlSet = styled.div`\n  align-items: center;\n  display: flex;\n\n  .icon-button {\n    color: ${props => props.theme.typeColor};\n    transition: opacity 0.5s ease-in-out;\n\n    &:hover {\n      cursor: pointer;\n      opacity: 0.6;\n    }\n\n    &:disabled {\n      path {\n        color: rgba(101, 101, 101, 0.15);\n      }\n    }\n  }\n\n  .label {\n    ${labelTypeStyles};\n    font-size: 0.75em;\n  }\n`;\n\nconst ScaleControl = ({incrementCounter, decrementCounter, incrementLabel, decrementLabel}) => {\n  const [count, setCount] = useState(1);\n\n  return (\n    <ScaleControlSet>\n      <label className=\"label\" htmlFor=\"incrementCounter\">\n        Scale\n      </label>\n      <IconButton\n        aria-label={incrementLabel}\n        onClick={() => incrementCounter(count)}\n        disabled={count < 1}\n        classes={{ root: \"icon-button\" }}\n      >\n        <AddBox />\n      </IconButton>\n      <CustomTextField\n        type=\"number\"\n        id=\"incrementCounter\"\n        value={count}\n        onChange={e => setCount(parseInt(e.target.value))}\n        style={{ width: 40 }}\n        margin=\"dense\"\n        inputProps={{\n          min: 0,\n          max: 5\n        }}\n      />\n      <IconButton\n        aria-label={decrementLabel}\n        onClick={() => decrementCounter(count)}\n        className=\"icon-button\"\n        disabled={count < 1}\n      >\n        <IndeterminateCheckBox />\n      </IconButton>\n    </ScaleControlSet>\n  );\n};\n\nexport default ScaleControl;","import React from 'react';\nimport styled from 'styled-components';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { CustomFormControlLabel } from '../features/typeTester/controls/Form.style';\n\nconst StyledSwitch = styled(Switch)`\n\n`;\n\nconst CustomSwitch = ({ checked, handleChange, label }) => {\n  const controlColors = {\n    off: \"#1FC028\",\n    on: \"#D44527\"\n  }; \n\n  return (\n    <CustomFormControlLabel\n      control={\n        <StyledSwitch\n          checked={checked}\n          classes={{\n            root: \"custom-switch-control\",\n            checked: \"custom-switch-control--checked\"\n          }}\n          onChange={handleChange}\n          value=\"checkedB\"\n        />\n      }\n      labelPlacement=\"start\"\n      label={label}\n      classes={{\n        labelPlacementStart: \"custom-form-control-label--start\"\n      }}\n    />\n  );\n};\n\nexport default CustomSwitch;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport styled from 'styled-components';\nimport { addLargeSample, addSmallSample, removeLargeSample, removeSmallSample, toggleFocusMode } from '../actions/Controls.actions';\nimport { \n  headingFontName, \n  typeScaleValue, \n  typeColor } from '../../../store/selectors';\nimport Sample from './Sample';\nimport ScaleControl from './ScaleControl';\nimport CustomSwitch from '../../../components/CustomSwitch';\nconst StyledList = styled.div`\n  border-bottom: 1px solid #D8D8D8;\n  color: ${props => props.theme.black};\n  margin-bottom: 30px;\n  padding: 0 0 30px;\n\n  .controls {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .sample-container {\n    margin: 30px 0;\n  }\n`;\n\nclass SampleList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sampleList: []\n    }  \n  }\n\n  componentDidMount() {\n    this.generateSamples();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if ((this.props.largeSamples !== prevProps.largeSamples) || \n        (this.props.smallSamples !== prevProps.smallSamples) ||\n        (this.props.typeScaleSize !== prevProps.typeScaleSize)\n        ) \n        { this.generateSamples(); }\n  }\n\n  generateSamples() {\n    const { largeSamples, smallSamples, typeScaleSize } = this.props;\n    const newSampleList = [1];\n\n    for (let i = 1; i <= largeSamples; i++) {\n      newSampleList.unshift(Math.pow(typeScaleSize, i));\n    }\n    for (let i = 1; i <= smallSamples; i++) {\n      newSampleList.push(Math.pow(typeScaleSize, -i));\n    }\n    \n    this.setState({\n      sampleList: newSampleList\n    })\n  }\n\n  render() {\n    const {\n      addLargeSample,\n      addSmallSample,\n      baseSize,\n      baseUnit,\n      focusState,\n      fontWeight,\n      fontFamily,\n      previewHeadline,\n      lineHeight,\n      removeLargeSample,\n      removeSmallSample,\n      roundFontSizes,\n      toggleFocusMode,\n      typeColor,\n      width\n    } = this.props;\n    const { sampleList } = this.state;\n\n    return (\n        <StyledList>\n          <div className=\"controls\">\n            <ScaleControl \n              incrementLabel=\"Add a large sample\"\n              incrementCounter={addLargeSample}\n              decrementLabel=\"Remove a large sample\"\n              decrementCounter={removeLargeSample}\n            />\n          <CustomSwitch\n            checked={focusState}\n            handleChange={toggleFocusMode}\n            label=\"Detail Mode\"\n          />\n          </div>\n        <div className=\"sample-container\">\n          {sampleList\n            .map((sample, i) => (\n              <div key={`sample-${i}`}>\n                <Sample\n                  baseSize={baseSize}\n                  baseUnit={baseUnit}\n                  focusState={focusState}\n                  fontFamily={fontFamily}\n                  fontWeight={fontWeight}\n                  lineHeight={lineHeight}\n                  previewHeadline={previewHeadline}\n                  roundFontSizes={roundFontSizes}\n                  typeColor={typeColor}\n                  typeScaleValue={sample}\n                />\n              </div>\n            ))}\n        </div>\n        <ScaleControl\n          incrementLabel=\"Add a small sample\"\n          incrementCounter={addSmallSample}\n          decrementLabel=\"Remove a small sample\"\n          decrementCounter={removeSmallSample}\n        />\n        </StyledList>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  baseSize: state.baseSize,\n  baseUnit: state.baseUnit,\n  focusState: state.focusMode,\n  fontFamily: headingFontName(state),\n  fontWeight: state.headingWeightSelected,\n  largeSamples: state.largeSamples,\n  lineHeight: state.headingLineHeight,\n  previewHeadline: state.previewHeadline,\n  roundFontSizes: state.roundFontSizes,\n  smallSamples: state.smallSamples,\n  typeColor: typeColor(state),\n  typeScaleSize: typeScaleValue(state),\n});\n\nconst mapDispatchToProps = {\n  addLargeSample,\n  addSmallSample,\n  removeLargeSample,\n  removeSmallSample,\n  toggleFocusMode\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SampleList);","import React from 'react';\n\nconst Paragraph = ({ typeColor, fontFamily, fontWeight, lineHeight, text }) => {\n  const styles={\n    color: `${typeColor}`,\n    fontFamily: `${fontFamily}`,\n    fontWeight: `${fontWeight}`,\n    lineHeight: `${lineHeight}`,\n  }\n  \n  return (\n    <p style={styles}>\n      {text}\n    </p>\n  );\n};\n\nexport default Paragraph;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bodyFontName, headingFontName, typeScaleValue, typeColor } from '../../../store/selectors';\nimport { calculateFontSizes } from '../../../helpers';\nimport Heading from '../../../components/Heading';\nimport Paragraph from '../../../components/Paragraph';\nimport SampleItem from '../../../components/SampleItem';\n\nconst levels = [...Array(6).keys()].map(level => level + 1);\n\nclass BodyTypeTester extends Component {\n  render() {\n    const { \n      baseSize,\n      baseUnit,\n      bodyFont,\n      bodyLineHeight,\n      bodyWeight,\n      focusState,\n      headingFont,\n      headingLineHeight,\n      headingWeight,\n      previewParagraph, \n      previewHeadline,\n      roundFontSizes,\n      typeColor,\n      typeScaleSize\n    } = this.props;\n\n    return (\n      <div className=\"body-type-tester\">\n        {levels.map((level, i, levels) => {\n         \n          const multiplier = (levels.length - i) - 1;\n          const typeScaleValue = Math.pow(typeScaleSize, multiplier);\n          const { fontSize, fontSizePx, fontSizeEms} = calculateFontSizes(baseSize, typeScaleValue, roundFontSizes);\n          // const fontSize = calculateTypeSize(baseSize, typeScaleValue);\n          // const fontSizePx = calculateFontSizePx(fontSize, 2, roundFontSizes);\n          // const fontSizeEms = calculateFontSizeEms(typeScaleValue, 3, false);\n          const marginTop = `${3.5 * multiplier}px`;\n\n          return (\n            <SampleItem\n              alignLabel=\"start\"\n              labelMargin={`${marginTop} 0 0`}\n              key={i}\n              focusState={focusState} \n              text={baseUnit === \"px\" ? fontSizePx : fontSizeEms}  \n            >\n               <Heading\n                  fontFamily={headingFont}\n                  fontSize={`${fontSize}px`}\n                  fontWeight={headingWeight}\n                  level={level}\n                  lineHeight={headingLineHeight}\n                  text={previewHeadline}\n                  typeColor={typeColor}\n                />\n                <Paragraph\n                  fontFamily={bodyFont}\n                  fontWeight={bodyWeight}\n                  lineHeight={bodyLineHeight}\n                  text={previewParagraph}\n                  typeColor={typeColor}\n                />\n            </SampleItem>\n          )\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  baseSize: state.baseSize,\n  baseUnit: state.baseUnit,\n  bodyTypeColor: state.bodyTypeColor,\n  bodyFont: bodyFontName(state),\n  bodyLineHeight: state.bodyLineHeight,\n  bodyWeight: state.bodyWeightSelected,\n  focusState: state.focusMode,\n  headingFont: headingFontName(state),\n  headingLineHeight: state.headingLineHeight,\n  headingWeight: state.headingWeightSelected,\n  previewParagraph: state.previewParagraph,\n  previewHeadline: state.previewHeadline,\n  roundFontSizes: state.roundFontSizes,\n  typeColor: typeColor(state),\n  typeScaleSize: typeScaleValue(state)\n});\n\nexport default connect(\n  mapStateToProps,\n)(BodyTypeTester);","import React from 'react';\nimport SampleList from \"../modularScale/SampleList\";\nimport BodyTypeTester from \"../bodyScale/BodyTypeTester\";\n\nconst Main = () => {\n  return (\n    <main>\n      <SampleList />\n      <BodyTypeTester />\n    </main>\n  );\n};\n\nexport default Main;","import React, { useState } from \"react\";\nimport styled from 'styled-components';\nimport Hidden from \"@material-ui/core/Hidden\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport BackIcon from '@material-ui/icons/KeyboardBackspace';\nimport Sidebar from './Sidebar';\nimport Main from './Main';\n\nconst CustomHeading = styled.h2`\n  color: ${props => props.theme.typeColor};\n  font-family: \"Rangle Riforma\";\n  font-size: 2em;\n  font-weight: 700;\n  line-height: 1.2;\n  margin: 0 0 40px;\n\n  .icon {\n    display: inline-block;\n    margin-right: 15px;\n  }\n`;\nconst customHeadingText = \"Type Settings\";\n\nconst InvisibleButton = styled.button`\n  background-color: transparent;\n  border: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst GridContainer = styled.div`\n  margin-top: 80px;\n\n  .wrapper.grid {\n    display: grid;\n    grid-column-gap: 100px;\n    grid-template-columns: 300px 1fr;\n  }\n\n  .focus {\n    display: flex;\n    justify-content: center;\n\n    .body-type-tester {\n      max-width: 800px;\n    }\n  }\n`;\n\nfunction SidebarBreakpointUp(props) {\n  const [controlsVisible, setControlVisibility] = useState(false);\n  const { width } = props;\n  const baseClass = \"wrapper\";\n  const classList = (base) => {\n    if (props.focusMode) {\n      return `${base} focus`\n    } else if (width !== \"sm\" && width !== \"xs\" && !props.focusMode) {\n      return `${base} grid`;\n    }\n    return base;\n  };\n\n  return (\n    <GridContainer>\n      <div className=\"wrapper\">\n        <Hidden smUp>\n          <InvisibleButton \n            type=\"button\" \n            onClick={() => setControlVisibility(!controlsVisible)}>\n            <CustomHeading>\n              <span className=\"icon\">\n                {\n                  controlsVisible ? \n                  <BackIcon /> :\n                  <SettingsIcon />\n                }\n              </span>\n              {customHeadingText}\n            </CustomHeading>\n          </InvisibleButton>\n        </Hidden>\n      </div>\n      <div className={classList(baseClass)}>\n        <Hidden smDown={controlsVisible === false} smUp={props.focusMode}>\n          <div>\n            <Hidden smDown={controlsVisible === true}>\n              <CustomHeading>\n                {customHeadingText}\n              </CustomHeading>\n            </Hidden>\n            <Sidebar />\n          </div>\n        </Hidden>\n        <Hidden smDown={controlsVisible}>\n          <Main />\n        </Hidden>\n      </div>\n    </GridContainer>\n  );\n}\n\nexport default withWidth()(SidebarBreakpointUp);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { Colors } from './utilities/Colors';\nimport { backgroundColor, labelColor, typeColor } from './store/selectors';\nimport Header from './components/Header';\nimport BreakpointUp from './features/typeTester/containers/BreakpointUp';\n\nclass App extends Component {\n\n  render() {\n    const {\n      backgroundColor,\n      focusMode,\n      labelColor,\n      themeSelected,\n      typeColor\n    } = this.props;\n\n  const rangleTypescaleTheme = {\n    black: Colors.black,\n    darkGray: Colors.darkGray,\n    fontFamily: \"'Rangle Riforma', Helvetica, Arial\",\n    lightGray: Colors.lightGray,\n    white: Colors.white,\n    backgroundColor,\n    labelColor,\n    typeColor\n  };\n\n    return (\n      <ThemeProvider theme={rangleTypescaleTheme}>\n        <div className={themeSelected + \"-mode\"}>\n          <>\n            <Header />\n            <BreakpointUp \n              focusMode={focusMode}\n              themeSelected={themeSelected}\n            />\n          </>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  backgroundColor: backgroundColor(state),\n  focusMode: state.focusMode,\n  labelColor: labelColor(state),\n  typeColor: typeColor(state),\n  themeSelected: state.themeSelected\n});\n\nexport default connect(\n  mapStateToProps,\n)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from './serviceWorker';\nimport { createAppStore } from \"./store\"\n\nReactDOM.render(\n  <Provider store={createAppStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { reducer } from \"../reducers\";\nimport {applyMiddleware, compose as composeBase, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\n\nexport const createAppStore = () => {\n  const compose =\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__)\n    || composeBase;\n\n  return createStore(\n    reducer,\n    compose(\n      applyMiddleware(thunk)\n    )\n  );\n};"],"sourceRoot":""}